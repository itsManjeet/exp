{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3e759c8c_9742ca6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-28T20:29:09Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc0012543",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "939b34dd_e27d7b9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-28T20:32:03Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "3e759c8c_9742ca6c",
      "tag": "autogenerated:trybots~happy",
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1fd7ea3_1c109866",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "Although this is valuable information, I\u0027m not sure it\u0027s important to users of this function. I think the doc should at least start with something more high-level, like \"CallStacks lists all the call stacks for each vulnerability in res.\" Then I would have the last paragraph, about ordering. Then I\u0027d put your current first paragraph last.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 141,
        "endChar": 45
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "520e4467_fd673c42",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "Nit: I actually like writing `vuln :\u003d vuln` here. The weirdness of that emphasizes to the reader that you\u0027re doing it just for variable-capture reasons and not, say, to save typing.",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 11
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f94d711_fec9d476",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "understandable",
      "range": {
        "startLine": 222,
        "startChar": 3,
        "endLine": 222,
        "endChar": 18
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe5900e_401229fd",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "Can\u0027t we say that a package is in the std lib if it doesn\u0027t have a dot?\n\nSee https://go.googlesource.com/pkgsite/+/refs/heads/master/internal/stdlib/stdlib.go#549.",
      "range": {
        "startLine": 238,
        "startChar": 0,
        "endLine": 250,
        "endChar": 1
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee399e2f_77a937cb",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "stackLess\n\n(XXXCompare to me means it will return 0, -1 or 1 as in, for example, https://pkg.go.dev/strings#Compare.)",
      "range": {
        "startLine": 272,
        "startChar": 5,
        "endLine": 272,
        "endChar": 17
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c05174da_c0ee5dc3",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 273,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "factor out O(n) computation",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 14
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42fbf4ae_fcc11f9e",
        "filename": "vulncheck/witness.go",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-01-31T18:28:32Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 281,
        "endChar": 10
      },
      "revId": "c00125433f2401a875ca561096f026f5d15b2f58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}