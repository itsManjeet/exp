{
  "comments": [
    {
      "key": {
        "uuid": "6d0f3eb2_6ae4d7c9",
        "filename": "shiny/driver/x11driver/screen.go",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5015
      },
      "writtenOn": "2015-07-27T05:22:41Z",
      "side": 1,
      "message": "i hate events. too much \"what is this?\" logic everywhere",
      "range": {
        "startLine": 47,
        "startChar": 17,
        "endLine": 47,
        "endChar": 19
      },
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd710a1d_68c4bbd7",
        "filename": "shiny/driver/x11driver/screen.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 9190
      },
      "writtenOn": "2015-07-27T12:25:07Z",
      "side": 1,
      "message": "You may want to explicitly document in the screen.Screen interface documentation that NewWindow() will show the window.",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db8e63c_50fc6ca9",
        "filename": "shiny/driver/x11driver/screen.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-07-28T03:18:07Z",
      "side": 1,
      "message": "Huh, I know that X11 has separate concepts of creating and mapping windows, but I\u0027d be surprised if Screen.NewWindow didn\u0027t show the window.",
      "parentUuid": "cd710a1d_68c4bbd7",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd9caada_4d8219a1",
        "filename": "shiny/driver/x11driver/screen.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 9190
      },
      "writtenOn": "2015-07-28T17:54:04Z",
      "side": 1,
      "message": "Every platform has that distinction. While I personally think it would look better to build your UI offscreen and then show the window, I\u0027m willing to defer that discussion until the package is more fully developed. (Having Show and Hide methods for later would also be good here, but we can deal with that later as well.)",
      "parentUuid": "2db8e63c_50fc6ca9",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd710a1d_88a81710",
        "filename": "shiny/driver/x11driver/x11driver.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 9190
      },
      "writtenOn": "2015-07-27T12:25:07Z",
      "side": 1,
      "message": "What is the purpose of this check? You haven\u0027t actually assigned anything to retErr yet, so I don\u0027t know what you have in mind here...",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edab2e9c_9efe3ddd",
        "filename": "shiny/driver/x11driver/x11driver.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5810
      },
      "writtenOn": "2015-07-27T12:32:16Z",
      "side": 1,
      "message": "the defer closes over the retErr variable and is called when \u0027main\u0027 returns.\nat that point, retErr may very well be non-nil if something bad happened.",
      "parentUuid": "cd710a1d_88a81710",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edab2e9c_feae61ee",
        "filename": "shiny/driver/x11driver/x11driver.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5810
      },
      "writtenOn": "2015-07-27T12:41:07Z",
      "side": 1,
      "message": "that being said, retErr (the named return variable) isn\u0027t modified anywhere in the current \u0027main\u0027 method.\n\none probably wants to remove it (at line 37), rename retErr into err at line 43 and \"un-shadow\" \u0027err\u0027 at lines 48, 51 and 61.\n\nor, assign the shadowed \u0027err\u0027 from line 48, 51 and 61 to \u0027retErr\u0027 and return?",
      "parentUuid": "edab2e9c_9efe3ddd",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db8e63c_902c14cf",
        "filename": "shiny/driver/x11driver/x11driver.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-07-28T03:18:07Z",
      "side": 1,
      "message": "@andlabs, see http://play.golang.org/p/ina8SrLAsZ\n\n@sbinet, I prefer to call the return value retErr, so that I don\u0027t have to worry about having more than one err shadow any other err.",
      "parentUuid": "edab2e9c_feae61ee",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd9caada_0d781137",
        "filename": "shiny/driver/x11driver/x11driver.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 9190
      },
      "writtenOn": "2015-07-28T17:54:04Z",
      "side": 1,
      "message": "Neat! You learn something new every day, I guess :)",
      "parentUuid": "2db8e63c_902c14cf",
      "revId": "7a6684c3c29dac16c24f054f57f03d7f5e8f1fb9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}