{
  "comments": [
    {
      "key": {
        "uuid": "efda7963_c87e337a",
        "filename": "shiny/driver/internal/lifecycler/lifecycler.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-07-28T15:04:37Z",
      "side": 1,
      "message": "The glwidget will eventually use it.",
      "revId": "cbe1a6c11b12535a57563bc3a6a646fd27903d71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fa57d1d_cb8c352d",
        "filename": "shiny/driver/internal/lifecycler/lifecycler.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-07-28T21:23:20Z",
      "side": 1,
      "message": "Maybe. Or each glwidget has its own dedicated GL context separate from the shiny window GL context. We\u0027ll see.",
      "parentUuid": "efda7963_c87e337a",
      "revId": "cbe1a6c11b12535a57563bc3a6a646fd27903d71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf8db5b7_bd82fff8",
        "filename": "shiny/driver/internal/lifecycler/lifecycler.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-07-28T22:55:52Z",
      "side": 1,
      "message": "Each glwidget has its own dedicated GL context already. The point of passing the paint context is to give access to the default framebuffer to copy the result into.",
      "parentUuid": "8fa57d1d_cb8c352d",
      "revId": "cbe1a6c11b12535a57563bc3a6a646fd27903d71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f50e5ef_d187a407",
        "filename": "shiny/driver/internal/lifecycler/lifecycler.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-07-28T23:16:06Z",
      "side": 1,
      "message": "Ah, that access might not be necessary. I have some prototype code where the glwidget\u0027s dedicated GL context is render-to-textured, and the resultant texture is wrapped as a screen.Texture. You can copy that to the default framebuffer via the window\u0027s screen.Drawer in the normal fashion, e.g. during node.Paint, without the gldriver having to expose its GL context as a \u0027draw context\u0027. This avoids the issue of having to co-ordinate (i.e. mutex) the glwidget and the gldriver both trying to concurrently use the same stateful GL context.\n\nThis was only a prototype, though. My multi-threaded multi-context OpenGL was crashing somewhere in C/C++ code /usr/lib/x86_64-linux-gnu/libLLVM-3.4.so.1 called from /usr/lib/x86_64-linux-gnu/dri/swrast_dri.so. I suspect that it was a driver bug, but it\u0027s really hard to tell, and there are higher priority things to work on.",
      "parentUuid": "cf8db5b7_bd82fff8",
      "revId": "cbe1a6c11b12535a57563bc3a6a646fd27903d71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}