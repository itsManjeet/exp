{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd89bf3f_7bd193e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-27T13:57:51Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "b1eebbf0_92b2c27d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1908d746_868034f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-27T13:57:51Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d188e1bca",
      "tag": "autogenerated:trybots~beginning",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6adda06b_a21eb6ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-27T13:59:33Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "1908d746_868034f0",
      "tag": "autogenerated:trybots~happy",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b127cbfc_37de6982",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 7
      },
      "lineNbr": 905,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Let\u0027s pass in repoRoot as a parameter instead. The caller, loadLocalModule, knows it already.",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b563873_d524c5ef",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 7
      },
      "lineNbr": 906,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Let\u0027s use hasFilePathPrefix and trimFilePathPrefix here. I think we can probably assume hasFilePathPrefix is true if repoRoot !\u003d \"\", but we should probably call it anyway and panic if not.",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "953ebbed_2046a0ca",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 7
      },
      "lineNbr": 912,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Let\u0027s make sure there are no uncommitted changes to the repo before calling zip.CreateFromVCS. I think checking whether \u0027git status --porcelain\u0027 writes anything to stdout is the way to do that.",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e44dd18_214f9afd",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Use filepath.ToSlash on modRel, since the relative path may have backslashes and CreateFromVCS won\u0027t accept that.",
      "range": {
        "startLine": 913,
        "startChar": 72,
        "endLine": 913,
        "endChar": 78
      },
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8adcf948_73b5b371",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "I\u0027d like to still support folks who aren\u0027t using a VCS system we support (or one not supported by the go command at all). We should still use CreateFromDir for them. Let\u0027s check `repoRoot !\u003d \"\"` to decide which one to use.",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8fd7609_00efc662",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 7
      },
      "lineNbr": 331,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "See comment below: I think we can do this based on whether the test contains a file like .git/HEAD or .hg/somethingsomething.",
      "range": {
        "startLine": 330,
        "startChar": 0,
        "endLine": 331,
        "endChar": 13
      },
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afab1b6a_fbdedc1f",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 7
      },
      "lineNbr": 332,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Let\u0027s cache the result of this if we can; on Windows, exec.LookPath is surprisingly expensive.",
      "range": {
        "startLine": 332,
        "startChar": 15,
        "endLine": 332,
        "endChar": 35
      },
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5ce9119_bed68c60",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 7
      },
      "lineNbr": 335,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "If we support repos and bare directories both, let\u0027s only create repos for a subset of tests. There are several tests that already have files named .git/HEAD or .git/empty in order to simulate a git repository so let\u0027s just do those.",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bab87970_ad4dbfa1",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 7
      },
      "lineNbr": 395,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-08-27T17:53:36Z",
      "side": 1,
      "message": "Nit: let\u0027s put this in a loop to remove a bit of redundancy.\n\n  for _, args :\u003d range [][]string{\n    {\"git\", \"init\"},\n    {\"git\", \"checkout\", \"-b\", \"test\"},\n    ...\n  }{\n    cmd :\u003d exec.Command(args[0], args[1:]...)\n    ...\n  }",
      "revId": "188e1bca5647402b20c18ed28f1fa8fe3a501430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}