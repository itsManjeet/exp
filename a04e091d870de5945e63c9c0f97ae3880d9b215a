{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80a94886_32f205dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-02T20:06:07Z",
      "side": 1,
      "message": "TRY\u003dlinux-amd64-longtest",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8848f46_45e24ea3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-02T20:06:13Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003da04e091d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d88cdb5_0d1ea85b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-02T20:09:04Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "e8848f46_45e24ea3",
      "tag": "autogenerated:trybots~happy",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f4556fa_c8279fc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-03T21:45:10Z",
      "side": 1,
      "message": "Just to summarize the main changes induced by changes to the db structure:\n\n- The logic for considering only vulnerabilities that apply to the current OS, ARCH, and module versions is now in audit.FetchVulnerabilities and ModuleVulnerabilities.Filter.\n\n- The consequence of the latter is that VulnerableSymbols and related APIs do not have to worry about this logic.\n\n- In turn, Env is not necessary any more and ModuleVulnerabilities can be used as the input to audit APIs.\n\nIs my understanding correct?",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e2a308b_742003db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-04T20:02:15Z",
      "side": 1,
      "message": "Yes, that\u0027s correct.",
      "parentUuid": "2f4556fa_c8279fc6",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d85c7608_f4b0280c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-04T21:33:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e2a308b_742003db",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d375927_658ba1fc",
        "filename": "vulndb/govulncheck/main.go",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-03T21:45:10Z",
      "side": 1,
      "message": "Should these vulns be filtered too?",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 7
      },
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d5dcaee_81742c39",
        "filename": "vulndb/govulncheck/main.go",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-04T20:02:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d375927_658ba1fc",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 7
      },
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80fd5ef2_84170123",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-03T21:45:10Z",
      "side": 1,
      "message": "Does it make sense to make this a map[*packages.Module][]*osv.Entry? Avoids the need to have a separate type.\n\n(If yes, this change does not have to be made here. A TODO is ok and I will take over)",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "774a53f3_456555da",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-04T20:02:15Z",
      "side": 1,
      "message": "I don\u0027t think this would make things particularly simpler, we don\u0027t do any lookups using the packages.Module directly, so it\u0027s just a different way of storing the same data as far as I can see.",
      "parentUuid": "80fd5ef2_84170123",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "900dc01c_c6c8089e",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-03T21:45:10Z",
      "side": 1,
      "message": "This might be a bit confusing as it might not be clear what \"first\" means, i.e., what is the order of vulns in mv.\n\nDoes it make sense to return all vulns for which the path is a prefix of importPath? Or a longest prefix perhaps?\n\n(Again, if the answer is yes, a TODO would suffice here for now; I can make the change.)",
      "range": {
        "startLine": 152,
        "startChar": 54,
        "endLine": 152,
        "endChar": 60
      },
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23f5a7fa_9a12bf3b",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-04T20:02:15Z",
      "side": 1,
      "message": "Done, this comment was no longer accurate, cleaned it up to refer to the most specific prefix check that is done.",
      "parentUuid": "900dc01c_c6c8089e",
      "range": {
        "startLine": 152,
        "startChar": 54,
        "endLine": 152,
        "endChar": 60
      },
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07b513dd_6eb14df4",
        "filename": "vulndb/internal/audit/vulnerability.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-03T21:45:10Z",
      "side": 1,
      "message": "In case of a remote db, any concerns on making several calls to the db instead of one?\n\n(If yes, a TODO is ok here. I will take over.)",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "353388dc_b2c5b4fb",
        "filename": "vulndb/internal/audit/vulnerability.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-04T20:02:15Z",
      "side": 1,
      "message": "Internally the client makes multiple requests anyway, so there isn\u0027t much difference between passing one/multiple paths.\n\nI\u0027m considering just changing the golang.org/x/vulndb/client/Client.Get API to take a single path, and forcing the user to coalesce themselves.",
      "parentUuid": "07b513dd_6eb14df4",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca52464d_8303565b",
        "filename": "vulndb/internal/audit/vulnerability.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-04T21:33:34Z",
      "side": 1,
      "message": "That is probably the most atomic way of doing it, but it doesn\u0027t have to happen in this CL.",
      "parentUuid": "353388dc_b2c5b4fb",
      "revId": "a04e091d870de5945e63c9c0f97ae3880d9b215a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}