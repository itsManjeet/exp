{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2701cc87_2a7298bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-10-04T14:00:51Z",
      "side": 1,
      "message": "I\u0027m a bit confused about the motivation and terms here. It\u0027s not really marshaling, since it\u0027s converting a value to another value (which itself may be implement marshaller). It\u0027s really a lazy value that defers the computation of a simpler value until it is needed (one that may itself be lazy).\n\nI wonder why MarshalKind need exist. Isn\u0027t AnyKind + a type assertion sufficient to record this information? Is the assumption that it\u0027s cheaper to compute the interface satisfaction once and record it in the Value than to do it on demand?",
      "revId": "f00f159ae149dbaba53b31c7508a94d87627d710",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b0d4681_f7dda7bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-03T18:30:57Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "f17f070f_b6c0b34e",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f00f159ae149dbaba53b31c7508a94d87627d710",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922a1355_7e9d7a0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-03T18:30:57Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df00f159a\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f00f159ae149dbaba53b31c7508a94d87627d710",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3da8cc15_2a20fe01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-03T18:35:08Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "922a1355_7e9d7a0d",
      "tag": "autogenerated:trybots~happy",
      "revId": "f00f159ae149dbaba53b31c7508a94d87627d710",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a4eee25_bf03ba15",
        "filename": "slog/value.go",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-10-04T14:00:51Z",
      "side": 1,
      "message": "This method needs some explanation. It seems like mostly a convenience method that returns the Any value and asserts that it is a marshaller... except that in the unsafe representation, the Kind field distinguishes Marshaller from Any, presumably as an optimization.\n\nAlso, this function panics if v\u0027s kind is not Marshaller.",
      "revId": "f00f159ae149dbaba53b31c7508a94d87627d710",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}