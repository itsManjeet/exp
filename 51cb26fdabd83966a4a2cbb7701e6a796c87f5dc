{
  "comments": [
    {
      "key": {
        "uuid": "7b1a0aad_c2d26952",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "I have trouble with this first part of the sentence. What does it mean for two packages to be compatible? Is this the same as they are compatible if they were if they had the same name? That is, are the primarily different packages because of the name?",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 79
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ead555de_1097d8dc",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "From the point of view of the implementation, there\u0027s no difference between two packages and two versions of the same package, so I didn\u0027t call it out before. I have now.",
      "parentUuid": "7b1a0aad_c2d26952",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 79
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "252685c0_85cd0959",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/./, both at the same struct depth./ (maybe)",
      "range": {
        "startLine": 88,
        "startChar": 45,
        "endLine": 88,
        "endChar": 46
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1182035c_07d49c95",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Did something like that.",
      "parentUuid": "252685c0_85cd0959",
      "range": {
        "startLine": 88,
        "startChar": 45,
        "endLine": 88,
        "endChar": 46
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6afb9a90_ef22560a",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/Writing the/Using an/ (maybe)",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad4843fb_f6a4fa67",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6afb9a90_ef22560a",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d56eaf_b3d1638d",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 93,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/that is/representing/",
      "range": {
        "startLine": 93,
        "startChar": 61,
        "endLine": 93,
        "endChar": 65
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c12d7c_c29b40cb",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 93,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5d56eaf_b3d1638d",
      "range": {
        "startLine": 93,
        "startChar": 61,
        "endLine": 93,
        "endChar": 65
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d3c33f2_a69c9f06",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/the type/that type/",
      "range": {
        "startLine": 95,
        "startChar": 65,
        "endLine": 95,
        "endChar": 69
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4cb64a_16a9b0b2",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/an incompatible one/incompatible/",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52820169_533c2df7",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc4cb64a_16a9b0b2",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c524098_14cee083",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d3c33f2_a69c9f06",
      "range": {
        "startLine": 95,
        "startChar": 65,
        "endLine": 95,
        "endChar": 69
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "794fac54_855316d8",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 111,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/Others/Friends/ (maybe)",
      "range": {
        "startLine": 111,
        "startChar": 22,
        "endLine": 111,
        "endChar": 28
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76efa2ec_5d73c05e",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 111,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "794fac54_855316d8",
      "range": {
        "startLine": 111,
        "startChar": 22,
        "endLine": 111,
        "endChar": 28
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6427b527_eb40124d",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 114,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/the/they/",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2ef984f_c472753c",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 114,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6427b527_eb40124d",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b93558_2e4b60f4",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 171,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "remove extra newlines? (probably doesn\u0027t matter)",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14be24e9_15b7d318",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 171,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84b93558_2e4b60f4",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40bfc2b7_b6dbcbdf",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 173,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "Some Concepts sounds vague. Better be clear:\n\n## Terminology",
      "range": {
        "startLine": 173,
        "startChar": 7,
        "endLine": 173,
        "endChar": 8
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3021acc_c028b667",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 173,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40bfc2b7_b6dbcbdf",
      "range": {
        "startLine": 173,
        "startChar": 7,
        "endLine": 173,
        "endChar": 8
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511066df_9a43ee25",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "More precisely:\n\nAlthough `pkt.t` can\u0027t be referred to directly by a client, values of type `t` can be used.",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 193,
        "endChar": 8
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1dee892_6e97928f",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "511066df_9a43ee25",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 193,
        "endChar": 8
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dcfeabb_d8490ffc",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 196,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "Still, \"reachable\" is not defined. I think it needs to be defined (otherwise, how do you know how to implement this?)\n\n- an unexported type t is reachable if a client can access a value of t (e.g., via a variable, of function result)\n\nI think we only need this for types.",
      "range": {
        "startLine": 196,
        "startChar": 63,
        "endLine": 196,
        "endChar": 72
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bd498c5_a8dbdcc7",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 196,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "I agree it\u0027s only needed for types (actually, typenames).\n\nI don\u0027t need to know how to implement it; it falls out of the implementation. (I just traverse package-level objects and types.) I mention it here because it\u0027s a useful to understand the concept.\n\nYour definition of \"reachable\" may as well be the definition of \"exposed.\" I wish the definition were that simple, and maybe there is one, but yours falls short because I only care about accesses that are visible at compile time. So t is not exposed in \n\n   type t ...\n   var V interface{} \u003d t{}\n\nIs there a short, precise way to say that? \n\nThis is why I provided a definition in terms of the structure of types in my reply to your comment in PS6, line 187. I don\u0027t know if you saw that.",
      "parentUuid": "4dcfeabb_d8490ffc",
      "range": {
        "startLine": 196,
        "startChar": 63,
        "endLine": 196,
        "endChar": 72
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1c1fcb4_cd4a9fea",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 204,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "Again, this brings me back to the very first comment I have in this doc: Are the packages different primarily because their names are different? (otherwise they would just be different versions of the same package)?\n\nThis needs to be clearer as it controls everything that follows here.",
      "range": {
        "startLine": 204,
        "startChar": 56,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2f49d96_bfa3802e",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 204,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "I hope I clarified this above.",
      "parentUuid": "b1c1fcb4_cd4a9fea",
      "range": {
        "startLine": 204,
        "startChar": 56,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad9bd118_7b1f83b3",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 219,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "It\u0027s not clear to me why this would matter since the unexported name doesn\u0027t appear in client code.",
      "range": {
        "startLine": 219,
        "startChar": 25,
        "endLine": 219,
        "endChar": 26
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb22ee6_4f3e066c",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 219,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Indeed, it doesn\u0027t matter. \n\nBut it would break an algorithm that used a simple-minded definition of type sameness, like requiring old and new typenames to be the same. I\u0027m making this point in the context of that argument. I\u0027m saying that _because_ an unexported but exposed type can be renamed, _and_ that shouldn\u0027t matter to compatibility, it follows that you can\u0027t use name identity to match old and new typenames.",
      "parentUuid": "ad9bd118_7b1f83b3",
      "range": {
        "startLine": 219,
        "startChar": 25,
        "endLine": 219,
        "endChar": 26
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17d17b5b_e7cd0f7c",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 252,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "what does Otherwise mean here? both types are from the same package? Otherwise to 1) I presume, but it\u0027s not clear",
      "range": {
        "startLine": 252,
        "startChar": 3,
        "endLine": 252,
        "endChar": 12
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86015b37_2eb2dca1",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 252,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Indeed, otherwise to 1). I clarified in the ham-handed way of negating 1) inside 2). I couldn\u0027t think of a simple way to express the negation otherwise.",
      "parentUuid": "17d17b5b_e7cd0f7c",
      "range": {
        "startLine": 252,
        "startChar": 3,
        "endLine": 252,
        "endChar": 12
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4c80961_71a0f5da",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 273,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "just\n\n## Compatibility\n\nin matching with the other titles? (You don\u0027t have \"Definition of Equivalence\", etc.)",
      "range": {
        "startLine": 273,
        "startChar": 3,
        "endLine": 273,
        "endChar": 13
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1b4c14f_a3a52f29",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 273,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4c80961_71a0f5da",
      "range": {
        "startLine": 273,
        "startChar": 3,
        "endLine": 273,
        "endChar": 13
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "feeec175_f907955e",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 282,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/the name/their names/ (?)\n\nthere\u0027s some grammatical incorrectness here",
      "range": {
        "startLine": 282,
        "startChar": 50,
        "endLine": 282,
        "endChar": 53
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "533470b7_8acc3ba8",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 282,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Reworded. Does that help?",
      "parentUuid": "feeec175_f907955e",
      "range": {
        "startLine": 282,
        "startChar": 50,
        "endLine": 282,
        "endChar": 53
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189e63b1_a125f13e",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "This section seems out of place here. Move elsewhere?",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 295,
        "endChar": 4
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e109bd2_110cab87",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Removed. Alan suggested I add it, but I suppose it doesn\u0027t really add anything.",
      "parentUuid": "189e63b1_a125f13e",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 295,
        "endChar": 4
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e120126_f34f1d3a",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 355,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/types/signatures/ (maybe)",
      "range": {
        "startLine": 355,
        "startChar": 20,
        "endLine": 355,
        "endChar": 25
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25deac42_3b171411",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 355,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "It\u0027s nice that the rules for variables, functions and typenames are (nearly) identical. Using \"type\" here emphasizes that. \n\nAdded \"signatures\" in parens.",
      "parentUuid": "1e120126_f34f1d3a",
      "range": {
        "startLine": 355,
        "startChar": 20,
        "endLine": 355,
        "endChar": 25
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6c34017_4ee4bef5",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 367,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "As an aside, the reason why this works is because a function declaration is essentially a constant declaration of a function (if one could write them as such):\n\nfunc f \u003csig\u003e \u003cbody\u003e\n\nis the same as \n\nconst f \u003csig\u003e \u003d \u003cbody\u003e.\n\n(but don\u0027t bring them up here).",
      "range": {
        "startLine": 367,
        "startChar": 0,
        "endLine": 367,
        "endChar": 4
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f62490_0abb5a53",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 367,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f6c34017_4ee4bef5",
      "range": {
        "startLine": 367,
        "startChar": 0,
        "endLine": 367,
        "endChar": 4
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55d5f8ae_e4176246",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 376,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/implies/demands/ ? (it\u0027s a rule)",
      "range": {
        "startLine": 376,
        "startChar": 65,
        "endLine": 376,
        "endChar": 72
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9abc124_19ad9604",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 376,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55d5f8ae_e4176246",
      "range": {
        "startLine": 376,
        "startChar": 65,
        "endLine": 376,
        "endChar": 72
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4699db4b_80e963c0",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 387,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "s/imply/demand/ (or: require/",
      "range": {
        "startLine": 387,
        "startChar": 19,
        "endLine": 387,
        "endChar": 24
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d0bd25d_83b5e778",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 387,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4699db4b_80e963c0",
      "range": {
        "startLine": 387,
        "startChar": 19,
        "endLine": 387,
        "endChar": 24
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a4aa38e_e6a1fba1",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 446,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "almost certainly?\n\nIsn\u0027t it always harmless (as long as this compatibility rule doesn\u0027t play into channels used in function signatures).",
      "range": {
        "startLine": 446,
        "startChar": 64,
        "endLine": 446,
        "endChar": 70
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "115e1d8f_b50a7c77",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 446,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "The case I had in mind is splitting types, which I say below that I don\u0027t check for:\n\n  // old\n  type C1 chan\u003c- int\n  type C2 chan\u003c- int\n\n  // new\n  type C1 chan\u003c- int\n  type C2 chan int\n\nThat can break assignment.",
      "parentUuid": "2a4aa38e_e6a1fba1",
      "range": {
        "startLine": 446,
        "startChar": 64,
        "endLine": 446,
        "endChar": 70
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed3c8a2b_e681de5b",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 457,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "Is this true? Couldn\u0027t it be used together with objects from the same package that also implement that unexported method?",
      "range": {
        "startLine": 457,
        "startChar": 57,
        "endLine": 457,
        "endChar": 65
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a9d74d2_466d32f3",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 457,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "I meant that that is the only way for a client type to implement the interface. \n\nReworded.",
      "parentUuid": "ed3c8a2b_e681de5b",
      "range": {
        "startLine": 457,
        "startChar": 57,
        "endLine": 457,
        "endChar": 65
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "250ae328_1cef8ba9",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 470,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "should add a comment here that this fails (because t doesn\u0027t have an M2)",
      "range": {
        "startLine": 470,
        "startChar": 16,
        "endLine": 470,
        "endChar": 17
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e99614c5_c793a80d",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 470,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "250ae328_1cef8ba9",
      "range": {
        "startLine": 470,
        "startChar": 16,
        "endLine": 470,
        "endChar": 17
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c41e0f9e_87f33714",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 511,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "comment:\n\n// error: T doesn\u0027t implement I (missing method m)\n\nprobably useful to add such comments to all examples where we have an error",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a552638f_57a8e356",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 511,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c41e0f9e_87f33714",
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dda0cc09_d953bc1c",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 525,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "This example is incorrect: B and C are not identical, and the assignment b \u003d c would never have worked.\n\nDo you mean\n\ntype B \u003d struct { X int }\ntype C \u003d struct { X int }\n\n?",
      "range": {
        "startLine": 525,
        "startChar": 7,
        "endLine": 525,
        "endChar": 13
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f257c2c_837c04db",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 525,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "Changed to a conversion.\n\nThe alias version you give is not a problem, because I don\u0027t allow any changes in that case.",
      "parentUuid": "dda0cc09_d953bc1c",
      "range": {
        "startLine": 525,
        "startChar": 7,
        "endLine": 525,
        "endChar": 13
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "689f3a43_3876671e",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 553,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "Is compatibility transitive? (and on that note: reflexive?)\n\nSpecifically: If an old module M contains old packages P1 and P2, and P2 happens to be compatible with P1, and a new module M\u0027 contains new packages P1\u0027 and P2\u0027 with P1\u0027 compatible with P1, P2\u0027 compatible with P2, will P2\u0027 still be compatible with P1\u0027?\n\n(seem non-trivial)",
      "range": {
        "startLine": 553,
        "startChar": 35,
        "endLine": 553,
        "endChar": 45
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a4b429b_05de9ab9",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 553,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "It had better be reflexive, because what would it mean for a package to be incompatible with itself? And it had better be transitive, because if you make compatible changes to go from v1.1 to v1.2, and then again to go from v1.2 to v1.3, then v1.1 and v1.3 had better be compatible. That is how semver works, and we\u0027re building this tool to help with semver.\n\nMy definition is definitely reflexive. Each typename corresponds with itself, and all the compatibility rules for objects and types are satisfied by identical types (and in the case of consts, equal values).\n\nI don\u0027t have a solid proof of transitivity, because I don\u0027t see how to show that correspondence is transitive. But each individual rule in the definition is transitive. Most require a superset relation, and superset is transitive. This includes the two package rules: the first says that the new set of exported package-level names is a superset of the old, and the second that the new set of pairs of types (T, I) where T implements I is a superset of the old.\n\nThe other rules are latches, in the sense that once you transition from state A to B, you cannot leave B. These include the rules about removing channel direction and changing a struct from non-comparable to comparable, as well as removing an unexported method from an interface, which moves it from interface rule 1 to rule 2.\n\n(BTW, the definition of module compatibility in the text here is wrong and I\u0027m going to remove it.)",
      "parentUuid": "689f3a43_3876671e",
      "range": {
        "startLine": 553,
        "startChar": 35,
        "endLine": 553,
        "endChar": 45
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00236968_4a548acd",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 565,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "looks the same to me as T? missing alias decl?",
      "range": {
        "startLine": 565,
        "startChar": 6,
        "endLine": 565,
        "endChar": 12
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322b2fc9_74df6160",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 565,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "No, the difference is that T is a defined type while the type of V isn\u0027t.\n\n(By the way, you might want to just skip this whole \"Compatibility and Named Types\" section until you\u0027re comfortable with the rest of the doc. This section is muddier, because my thoughts aren\u0027t as clear.)",
      "parentUuid": "00236968_4a548acd",
      "range": {
        "startLine": 565,
        "startChar": 6,
        "endLine": 565,
        "endChar": 12
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bfd3665_89c87021",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 610,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "I don\u0027t understand the 2nd part of this sentence: \"cannot be written externally\" - it\u0027s not exported? Cannot be written a type literal?",
      "range": {
        "startLine": 610,
        "startChar": 53,
        "endLine": 610,
        "endChar": 63
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d9aa77_eaa61538",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 610,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "The latter. Changed.",
      "parentUuid": "3bfd3665_89c87021",
      "range": {
        "startLine": 610,
        "startChar": 53,
        "endLine": 610,
        "endChar": 63
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce23981_b66dbd5a",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 640,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-10-26T20:21:11Z",
      "side": 1,
      "message": "presumably this should be v1 \u003d v2?\n\nAlso, it\u0027s not going to work even with old code alone - V1 and V2 are different types. Missing alias?",
      "range": {
        "startLine": 640,
        "startChar": 5,
        "endLine": 640,
        "endChar": 7
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb97b835_4c8d9def",
        "filename": "apidiff/README.md",
        "patchSetId": 11
      },
      "lineNbr": 640,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-10-27T10:23:11Z",
      "side": 1,
      "message": "It should read pkg.V1 \u003d pkg.V2. Fixed.\n\nI tested this code. The old version does compile. Did you notice that these are vars, not types?",
      "parentUuid": "dce23981_b66dbd5a",
      "range": {
        "startLine": 640,
        "startChar": 5,
        "endLine": 640,
        "endChar": 7
      },
      "revId": "51cb26fdabd83966a4a2cbb7701e6a796c87f5dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}