{
  "comments": [
    {
      "key": {
        "uuid": "cc77242a_fa0b16d4",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-01-31T19:48:23Z",
      "side": 1,
      "message": "Is there some way to force gorelease to report incompatible changes at v0?\n\n(I could imagine a lot of folks wanting to at least be aware of the breaking changes they\u0027re about to release, even if those changes are within the SemVer guidelines.)",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 26
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e130c39_f67c0ee2",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 106,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-01-31T19:48:23Z",
      "side": 1,
      "message": "Note that the increment might be somewhat distant from the base, though.\n\n(For example, if they\u0027re issuing v1.3.1 to fix an incompatible change introduced in v1.3.0, the base might legitimately be v1.2.1 to ensure that the incompatible changes really are all reverted. In that case we only care that v1.3.0 exists, not that it is the base version.)",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 106,
        "endChar": 63
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ce7389_5d5baae2",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 421,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-01-31T19:48:23Z",
      "side": 1,
      "message": "Ooh, here\u0027s a subtle one: does apidiff correctly flag an incompatibility if they changed the package name between revisions?\n\n(For example, changing `package foo` to `package main`, or changing `package v2` to `package foo` for something with an import path like `example.com/m/v2/foo`?)\n\n\nActually, changing a package from `main` to `foo` might not technically be a breaking change, since nobody could have been importing the package previously, although changing an executable to a non-executable could still break users\u0027 workflows...",
      "range": {
        "startLine": 421,
        "startChar": 38,
        "endLine": 421,
        "endChar": 89
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f274836_3c7c336c",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 421,
      "author": {
        "id": 14570
      },
      "writtenOn": "2020-02-01T20:53:09Z",
      "side": 1,
      "message": "I\u0027m pretty sure it doesn\u0027t.",
      "parentUuid": "06ce7389_5d5baae2",
      "range": {
        "startLine": 421,
        "startChar": 38,
        "endLine": 421,
        "endChar": 89
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7183f859_ad66f44b",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 759,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-01-27T20:19:25Z",
      "side": 1,
      "message": "The bug is fixed. Can we remove NeedSyntax?",
      "range": {
        "startLine": 754,
        "startChar": 0,
        "endLine": 759,
        "endChar": 2
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "946c53ec_4a45890b",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 11
      },
      "lineNbr": 759,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-01-27T23:19:04Z",
      "side": 1,
      "message": "Yes! Thank you for the fix.",
      "parentUuid": "7183f859_ad66f44b",
      "range": {
        "startLine": 754,
        "startChar": 0,
        "endLine": 759,
        "endChar": 2
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "521627f6_0a900645",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-01-27T20:19:25Z",
      "side": 1,
      "message": "is this used?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 21
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4be5a7c2_086454dd",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-01-27T23:19:04Z",
      "side": 1,
      "message": "Nope, not anymore. I refactored this test framework a while back and forgot to clean this up.\n\nAdded some documentation as well, since it\u0027s not obvious how it works.",
      "parentUuid": "521627f6_0a900645",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 21
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b182354_bdbb8a71",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 11
      },
      "lineNbr": 186,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-01-27T20:19:25Z",
      "side": 1,
      "message": "Is this comment still true? The expected output is in the \"want\" file right?",
      "range": {
        "startLine": 184,
        "startChar": 3,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d982cf9_ca5b03f1",
        "filename": "cmd/gorelease/gorelease_test.go",
        "patchSetId": 11
      },
      "lineNbr": 186,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-01-27T23:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b182354_bdbb8a71",
      "range": {
        "startLine": 184,
        "startChar": 3,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "4f80e6bc9607b7bbe76d5da04b431927f874f958",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}