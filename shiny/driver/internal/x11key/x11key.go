// Copyright 2015 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// x11key contains X11 numeric codes for the keyboard and mouse.
package x11key // import "golang.org/x/exp/shiny/driver/internal/x11key"

import (
	"golang.org/x/mobile/event/key"
)

// These constants come from /usr/include/X11/X.h
const (
	ShiftMask   = 1 << 0
	LockMask    = 1 << 1
	ControlMask = 1 << 2
	Mod1Mask    = 1 << 3
	Mod2Mask    = 1 << 4
	Mod3Mask    = 1 << 5
	Mod4Mask    = 1 << 6
	Mod5Mask    = 1 << 7
	Button1Mask = 1 << 8
	Button2Mask = 1 << 9
	Button3Mask = 1 << 10
	Button4Mask = 1 << 11
	Button5Mask = 1 << 12
)

type KeysymTable [256][2]uint32

func (t *KeysymTable) Lookup(detail uint8, state uint16) (rune, key.Code) {
	// The key event's rune depends on whether the shift key is down.
	unshifted := rune(t[detail][0])
	r := unshifted
	if state&ShiftMask != 0 {
		r = rune(t[detail][1])
		// In X11, a zero keysym when shift is down means to use what the
		// keysym is when shift is up.
		if r == 0 {
			r = unshifted
		}
	}

	// The key event's code is independent of whether the shift key is down.
	var c key.Code
	if 0 <= unshifted && unshifted < 0x80 {
		// TODO: distinguish the regular '2' key and number-pad '2' key (with
		// Num-Lock).
		c = asciiKeycodes[unshifted]
	} else if nuk := nonUnicodeKeycodes[unshifted]; nuk != key.CodeUnknown {
		r, c = -1, nuk
	} else if uk, isUnicode := unicodeKeycodes[r]; isUnicode {
		r = uk
	}

	return r, c
}

func KeyModifiers(state uint16) (m key.Modifiers) {
	if state&ShiftMask != 0 {
		m |= key.ModShift
	}
	if state&ControlMask != 0 {
		m |= key.ModControl
	}
	if state&Mod1Mask != 0 {
		m |= key.ModAlt
	}
	if state&Mod4Mask != 0 {
		m |= key.ModMeta
	}
	return m
}

// These constants come from /usr/include/X11/{keysymdef,XF86keysym}.h
const (
	xkISOLeftTab = 0xfe20
	xkBackSpace  = 0xff08
	xkTab        = 0xff09
	xkReturn     = 0xff0d
	xkEscape     = 0xff1b
	xkMultiKey   = 0xff20
	xkHome       = 0xff50
	xkLeft       = 0xff51
	xkUp         = 0xff52
	xkRight      = 0xff53
	xkDown       = 0xff54
	xkPageUp     = 0xff55
	xkPageDown   = 0xff56
	xkEnd        = 0xff57
	xkInsert     = 0xff63
	xkMenu       = 0xff67
	xkF1         = 0xffbe
	xkF2         = 0xffbf
	xkF3         = 0xffc0
	xkF4         = 0xffc1
	xkF5         = 0xffc2
	xkF6         = 0xffc3
	xkF7         = 0xffc4
	xkF8         = 0xffc5
	xkF9         = 0xffc6
	xkF10        = 0xffc7
	xkF11        = 0xffc8
	xkF12        = 0xffc9
	xkShiftL     = 0xffe1
	xkShiftR     = 0xffe2
	xkControlL   = 0xffe3
	xkControlR   = 0xffe4
	xkAltL       = 0xffe9
	xkAltR       = 0xffea
	xkSuperL     = 0xffeb
	xkSuperR     = 0xffec
	xkDelete     = 0xffff

	xf86xkAudioLowerVolume = 0x1008ff11
	xf86xkAudioMute        = 0x1008ff12
	xf86xkAudioRaiseVolume = 0x1008ff13
)

// nonUnicodeKeycodes maps from those xproto.Keysym values (converted to runes)
// that do not correspond to a Unicode code point, such as "Page Up", "F1" or
// "Left Shift", to key.Code values.
var nonUnicodeKeycodes = map[rune]key.Code{
	xkISOLeftTab: key.CodeTab,
	xkBackSpace:  key.CodeDeleteBackspace,
	xkTab:        key.CodeTab,
	xkReturn:     key.CodeReturnEnter,
	xkEscape:     key.CodeEscape,
	xkHome:       key.CodeHome,
	xkLeft:       key.CodeLeftArrow,
	xkUp:         key.CodeUpArrow,
	xkRight:      key.CodeRightArrow,
	xkDown:       key.CodeDownArrow,
	xkPageUp:     key.CodePageUp,
	xkPageDown:   key.CodePageDown,
	xkEnd:        key.CodeEnd,
	xkInsert:     key.CodeInsert,
	xkMenu:       key.CodeRightGUI, // TODO: CodeRightGUI or CodeMenu??
	xkMultiKey:   key.CodeCompose,

	xkF1:  key.CodeF1,
	xkF2:  key.CodeF2,
	xkF3:  key.CodeF3,
	xkF4:  key.CodeF4,
	xkF5:  key.CodeF5,
	xkF6:  key.CodeF6,
	xkF7:  key.CodeF7,
	xkF8:  key.CodeF8,
	xkF9:  key.CodeF9,
	xkF10: key.CodeF10,
	xkF11: key.CodeF11,
	xkF12: key.CodeF12,

	xkShiftL:   key.CodeLeftShift,
	xkShiftR:   key.CodeRightShift,
	xkControlL: key.CodeLeftControl,
	xkControlR: key.CodeRightControl,
	xkAltL:     key.CodeLeftAlt,
	xkAltR:     key.CodeRightAlt,
	xkSuperL:   key.CodeLeftGUI,
	xkSuperR:   key.CodeRightGUI,

	xkDelete: key.CodeDeleteForward,

	xf86xkAudioRaiseVolume: key.CodeVolumeUp,
	xf86xkAudioLowerVolume: key.CodeVolumeDown,
	xf86xkAudioMute:        key.CodeMute,
}

// asciiKeycodes maps lower-case ASCII runes to key.Code values.
var asciiKeycodes = [0x80]key.Code{
	'a': key.CodeA,
	'b': key.CodeB,
	'c': key.CodeC,
	'd': key.CodeD,
	'e': key.CodeE,
	'f': key.CodeF,
	'g': key.CodeG,
	'h': key.CodeH,
	'i': key.CodeI,
	'j': key.CodeJ,
	'k': key.CodeK,
	'l': key.CodeL,
	'm': key.CodeM,
	'n': key.CodeN,
	'o': key.CodeO,
	'p': key.CodeP,
	'q': key.CodeQ,
	'r': key.CodeR,
	's': key.CodeS,
	't': key.CodeT,
	'u': key.CodeU,
	'v': key.CodeV,
	'w': key.CodeW,
	'x': key.CodeX,
	'y': key.CodeY,
	'z': key.CodeZ,

	'1': key.Code1,
	'2': key.Code2,
	'3': key.Code3,
	'4': key.Code4,
	'5': key.Code5,
	'6': key.Code6,
	'7': key.Code7,
	'8': key.Code8,
	'9': key.Code9,
	'0': key.Code0,

	' ':  key.CodeSpacebar,
	'-':  key.CodeHyphenMinus,
	'=':  key.CodeEqualSign,
	'[':  key.CodeLeftSquareBracket,
	']':  key.CodeRightSquareBracket,
	'\\': key.CodeBackslash,
	';':  key.CodeSemicolon,
	'\'': key.CodeApostrophe,
	'`':  key.CodeGraveAccent,
	',':  key.CodeComma,
	'.':  key.CodeFullStop,
	'/':  key.CodeSlash,

	// TODO: distinguish CodeKeypadSlash vs CodeSlash, and similarly for other
	// keypad codes.
}

// unicodeKeycodes maps xproto.Keysym to their corresponding unicode code
// point, this table is derived from X11/keysymdef.h.
var unicodeKeycodes = map[rune]rune{
	0x20:      0x0020,
	0x21:      0x0021,
	0x22:      0x0022,
	0x23:      0x0023,
	0x24:      0x0024,
	0x25:      0x0025,
	0x26:      0x0026,
	0x27:      0x0027,
	0x28:      0x0028,
	0x29:      0x0029,
	0x2a:      0x002A,
	0x2b:      0x002B,
	0x2c:      0x002C,
	0x2d:      0x002D,
	0x2e:      0x002E,
	0x2f:      0x002F,
	0x30:      0x0030,
	0x31:      0x0031,
	0x32:      0x0032,
	0x33:      0x0033,
	0x34:      0x0034,
	0x35:      0x0035,
	0x36:      0x0036,
	0x37:      0x0037,
	0x38:      0x0038,
	0x39:      0x0039,
	0x3a:      0x003A,
	0x3b:      0x003B,
	0x3c:      0x003C,
	0x3d:      0x003D,
	0x3e:      0x003E,
	0x3f:      0x003F,
	0x40:      0x0040,
	0x41:      0x0041,
	0x42:      0x0042,
	0x43:      0x0043,
	0x44:      0x0044,
	0x45:      0x0045,
	0x46:      0x0046,
	0x47:      0x0047,
	0x48:      0x0048,
	0x49:      0x0049,
	0x4a:      0x004A,
	0x4b:      0x004B,
	0x4c:      0x004C,
	0x4d:      0x004D,
	0x4e:      0x004E,
	0x4f:      0x004F,
	0x50:      0x0050,
	0x51:      0x0051,
	0x52:      0x0052,
	0x53:      0x0053,
	0x54:      0x0054,
	0x55:      0x0055,
	0x56:      0x0056,
	0x57:      0x0057,
	0x58:      0x0058,
	0x59:      0x0059,
	0x5a:      0x005A,
	0x5b:      0x005B,
	0x5c:      0x005C,
	0x5d:      0x005D,
	0x5e:      0x005E,
	0x5f:      0x005F,
	0x60:      0x0060,
	0x61:      0x0061,
	0x62:      0x0062,
	0x63:      0x0063,
	0x64:      0x0064,
	0x65:      0x0065,
	0x66:      0x0066,
	0x67:      0x0067,
	0x68:      0x0068,
	0x69:      0x0069,
	0x6a:      0x006A,
	0x6b:      0x006B,
	0x6c:      0x006C,
	0x6d:      0x006D,
	0x6e:      0x006E,
	0x6f:      0x006F,
	0x70:      0x0070,
	0x71:      0x0071,
	0x72:      0x0072,
	0x73:      0x0073,
	0x74:      0x0074,
	0x75:      0x0075,
	0x76:      0x0076,
	0x77:      0x0077,
	0x78:      0x0078,
	0x79:      0x0079,
	0x7a:      0x007A,
	0x7b:      0x007B,
	0x7c:      0x007C,
	0x7d:      0x007D,
	0x7e:      0x007E,
	0xa0:      0x00A0,
	0xa1:      0x00A1,
	0xa2:      0x00A2,
	0xa3:      0x00A3,
	0xa4:      0x00A4,
	0xa5:      0x00A5,
	0xa6:      0x00A6,
	0xa7:      0x00A7,
	0xa8:      0x00A8,
	0xa9:      0x00A9,
	0xaa:      0x00AA,
	0xab:      0x00AB,
	0xac:      0x00AC,
	0xad:      0x00AD,
	0xae:      0x00AE,
	0xaf:      0x00AF,
	0xb0:      0x00B0,
	0xb1:      0x00B1,
	0xb2:      0x00B2,
	0xb3:      0x00B3,
	0xb4:      0x00B4,
	0xb5:      0x00B5,
	0xb6:      0x00B6,
	0xb7:      0x00B7,
	0xb8:      0x00B8,
	0xb9:      0x00B9,
	0xba:      0x00BA,
	0xbb:      0x00BB,
	0xbc:      0x00BC,
	0xbd:      0x00BD,
	0xbe:      0x00BE,
	0xbf:      0x00BF,
	0xc0:      0x00C0,
	0xc1:      0x00C1,
	0xc2:      0x00C2,
	0xc3:      0x00C3,
	0xc4:      0x00C4,
	0xc5:      0x00C5,
	0xc6:      0x00C6,
	0xc7:      0x00C7,
	0xc8:      0x00C8,
	0xc9:      0x00C9,
	0xca:      0x00CA,
	0xcb:      0x00CB,
	0xcc:      0x00CC,
	0xcd:      0x00CD,
	0xce:      0x00CE,
	0xcf:      0x00CF,
	0xd0:      0x00D0,
	0xd1:      0x00D1,
	0xd2:      0x00D2,
	0xd3:      0x00D3,
	0xd4:      0x00D4,
	0xd5:      0x00D5,
	0xd6:      0x00D6,
	0xd7:      0x00D7,
	0xd8:      0x00D8,
	0xd9:      0x00D9,
	0xda:      0x00DA,
	0xdb:      0x00DB,
	0xdc:      0x00DC,
	0xdd:      0x00DD,
	0xde:      0x00DE,
	0xdf:      0x00DF,
	0xe0:      0x00E0,
	0xe1:      0x00E1,
	0xe2:      0x00E2,
	0xe3:      0x00E3,
	0xe4:      0x00E4,
	0xe5:      0x00E5,
	0xe6:      0x00E6,
	0xe7:      0x00E7,
	0xe8:      0x00E8,
	0xe9:      0x00E9,
	0xea:      0x00EA,
	0xeb:      0x00EB,
	0xec:      0x00EC,
	0xed:      0x00ED,
	0xee:      0x00EE,
	0xef:      0x00EF,
	0xf0:      0x00F0,
	0xf1:      0x00F1,
	0xf2:      0x00F2,
	0xf3:      0x00F3,
	0xf4:      0x00F4,
	0xf5:      0x00F5,
	0xf6:      0x00F6,
	0xf7:      0x00F7,
	0xf8:      0x00F8,
	0xf9:      0x00F9,
	0xfa:      0x00FA,
	0xfb:      0x00FB,
	0xfc:      0x00FC,
	0xfd:      0x00FD,
	0xfe:      0x00FE,
	0xff:      0x00FF,
	0x1a1:     0x0104,
	0x1a2:     0x02D8,
	0x1a3:     0x0141,
	0x1a5:     0x013D,
	0x1a6:     0x015A,
	0x1a9:     0x0160,
	0x1aa:     0x015E,
	0x1ab:     0x0164,
	0x1ac:     0x0179,
	0x1ae:     0x017D,
	0x1af:     0x017B,
	0x1b1:     0x0105,
	0x1b2:     0x02DB,
	0x1b3:     0x0142,
	0x1b5:     0x013E,
	0x1b6:     0x015B,
	0x1b7:     0x02C7,
	0x1b9:     0x0161,
	0x1ba:     0x015F,
	0x1bb:     0x0165,
	0x1bc:     0x017A,
	0x1bd:     0x02DD,
	0x1be:     0x017E,
	0x1bf:     0x017C,
	0x1c0:     0x0154,
	0x1c3:     0x0102,
	0x1c5:     0x0139,
	0x1c6:     0x0106,
	0x1c8:     0x010C,
	0x1ca:     0x0118,
	0x1cc:     0x011A,
	0x1cf:     0x010E,
	0x1d0:     0x0110,
	0x1d1:     0x0143,
	0x1d2:     0x0147,
	0x1d5:     0x0150,
	0x1d8:     0x0158,
	0x1d9:     0x016E,
	0x1db:     0x0170,
	0x1de:     0x0162,
	0x1e0:     0x0155,
	0x1e3:     0x0103,
	0x1e5:     0x013A,
	0x1e6:     0x0107,
	0x1e8:     0x010D,
	0x1ea:     0x0119,
	0x1ec:     0x011B,
	0x1ef:     0x010F,
	0x1f0:     0x0111,
	0x1f1:     0x0144,
	0x1f2:     0x0148,
	0x1f5:     0x0151,
	0x1f8:     0x0159,
	0x1f9:     0x016F,
	0x1fb:     0x0171,
	0x1fe:     0x0163,
	0x1ff:     0x02D9,
	0x2a1:     0x0126,
	0x2a6:     0x0124,
	0x2a9:     0x0130,
	0x2ab:     0x011E,
	0x2ac:     0x0134,
	0x2b1:     0x0127,
	0x2b6:     0x0125,
	0x2b9:     0x0131,
	0x2bb:     0x011F,
	0x2bc:     0x0135,
	0x2c5:     0x010A,
	0x2c6:     0x0108,
	0x2d5:     0x0120,
	0x2d8:     0x011C,
	0x2dd:     0x016C,
	0x2de:     0x015C,
	0x2e5:     0x010B,
	0x2e6:     0x0109,
	0x2f5:     0x0121,
	0x2f8:     0x011D,
	0x2fd:     0x016D,
	0x2fe:     0x015D,
	0x3a2:     0x0138,
	0x3a3:     0x0156,
	0x3a5:     0x0128,
	0x3a6:     0x013B,
	0x3aa:     0x0112,
	0x3ab:     0x0122,
	0x3ac:     0x0166,
	0x3b3:     0x0157,
	0x3b5:     0x0129,
	0x3b6:     0x013C,
	0x3ba:     0x0113,
	0x3bb:     0x0123,
	0x3bc:     0x0167,
	0x3bd:     0x014A,
	0x3bf:     0x014B,
	0x3c0:     0x0100,
	0x3c7:     0x012E,
	0x3cc:     0x0116,
	0x3cf:     0x012A,
	0x3d1:     0x0145,
	0x3d2:     0x014C,
	0x3d3:     0x0136,
	0x3d9:     0x0172,
	0x3dd:     0x0168,
	0x3de:     0x016A,
	0x3e0:     0x0101,
	0x3e7:     0x012F,
	0x3ec:     0x0117,
	0x3ef:     0x012B,
	0x3f1:     0x0146,
	0x3f2:     0x014D,
	0x3f3:     0x0137,
	0x3f9:     0x0173,
	0x3fd:     0x0169,
	0x3fe:     0x016B,
	0x1000174: 0x0174,
	0x1000175: 0x0175,
	0x1000176: 0x0176,
	0x1000177: 0x0177,
	0x1001e02: 0x1E02,
	0x1001e03: 0x1E03,
	0x1001e0a: 0x1E0A,
	0x1001e0b: 0x1E0B,
	0x1001e1e: 0x1E1E,
	0x1001e1f: 0x1E1F,
	0x1001e40: 0x1E40,
	0x1001e41: 0x1E41,
	0x1001e56: 0x1E56,
	0x1001e57: 0x1E57,
	0x1001e60: 0x1E60,
	0x1001e61: 0x1E61,
	0x1001e6a: 0x1E6A,
	0x1001e6b: 0x1E6B,
	0x1001e80: 0x1E80,
	0x1001e81: 0x1E81,
	0x1001e82: 0x1E82,
	0x1001e83: 0x1E83,
	0x1001e84: 0x1E84,
	0x1001e85: 0x1E85,
	0x1001ef2: 0x1EF2,
	0x1001ef3: 0x1EF3,
	0x13bc:    0x0152,
	0x13bd:    0x0153,
	0x13be:    0x0178,
	0x47e:     0x203E,
	0x4a1:     0x3002,
	0x4a2:     0x300C,
	0x4a3:     0x300D,
	0x4a4:     0x3001,
	0x4a5:     0x30FB,
	0x4a6:     0x30F2,
	0x4a7:     0x30A1,
	0x4a8:     0x30A3,
	0x4a9:     0x30A5,
	0x4aa:     0x30A7,
	0x4ab:     0x30A9,
	0x4ac:     0x30E3,
	0x4ad:     0x30E5,
	0x4ae:     0x30E7,
	0x4af:     0x30C3,
	0x4b0:     0x30FC,
	0x4b1:     0x30A2,
	0x4b2:     0x30A4,
	0x4b3:     0x30A6,
	0x4b4:     0x30A8,
	0x4b5:     0x30AA,
	0x4b6:     0x30AB,
	0x4b7:     0x30AD,
	0x4b8:     0x30AF,
	0x4b9:     0x30B1,
	0x4ba:     0x30B3,
	0x4bb:     0x30B5,
	0x4bc:     0x30B7,
	0x4bd:     0x30B9,
	0x4be:     0x30BB,
	0x4bf:     0x30BD,
	0x4c0:     0x30BF,
	0x4c1:     0x30C1,
	0x4c2:     0x30C4,
	0x4c3:     0x30C6,
	0x4c4:     0x30C8,
	0x4c5:     0x30CA,
	0x4c6:     0x30CB,
	0x4c7:     0x30CC,
	0x4c8:     0x30CD,
	0x4c9:     0x30CE,
	0x4ca:     0x30CF,
	0x4cb:     0x30D2,
	0x4cc:     0x30D5,
	0x4cd:     0x30D8,
	0x4ce:     0x30DB,
	0x4cf:     0x30DE,
	0x4d0:     0x30DF,
	0x4d1:     0x30E0,
	0x4d2:     0x30E1,
	0x4d3:     0x30E2,
	0x4d4:     0x30E4,
	0x4d5:     0x30E6,
	0x4d6:     0x30E8,
	0x4d7:     0x30E9,
	0x4d8:     0x30EA,
	0x4d9:     0x30EB,
	0x4da:     0x30EC,
	0x4db:     0x30ED,
	0x4dc:     0x30EF,
	0x4dd:     0x30F3,
	0x4de:     0x309B,
	0x4df:     0x309C,
	0x10006f0: 0x06F0,
	0x10006f1: 0x06F1,
	0x10006f2: 0x06F2,
	0x10006f3: 0x06F3,
	0x10006f4: 0x06F4,
	0x10006f5: 0x06F5,
	0x10006f6: 0x06F6,
	0x10006f7: 0x06F7,
	0x10006f8: 0x06F8,
	0x10006f9: 0x06F9,
	0x100066a: 0x066A,
	0x1000670: 0x0670,
	0x1000679: 0x0679,
	0x100067e: 0x067E,
	0x1000686: 0x0686,
	0x1000688: 0x0688,
	0x1000691: 0x0691,
	0x5ac:     0x060C,
	0x10006d4: 0x06D4,
	0x1000660: 0x0660,
	0x1000661: 0x0661,
	0x1000662: 0x0662,
	0x1000663: 0x0663,
	0x1000664: 0x0664,
	0x1000665: 0x0665,
	0x1000666: 0x0666,
	0x1000667: 0x0667,
	0x1000668: 0x0668,
	0x1000669: 0x0669,
	0x5bb:     0x061B,
	0x5bf:     0x061F,
	0x5c1:     0x0621,
	0x5c2:     0x0622,
	0x5c3:     0x0623,
	0x5c4:     0x0624,
	0x5c5:     0x0625,
	0x5c6:     0x0626,
	0x5c7:     0x0627,
	0x5c8:     0x0628,
	0x5c9:     0x0629,
	0x5ca:     0x062A,
	0x5cb:     0x062B,
	0x5cc:     0x062C,
	0x5cd:     0x062D,
	0x5ce:     0x062E,
	0x5cf:     0x062F,
	0x5d0:     0x0630,
	0x5d1:     0x0631,
	0x5d2:     0x0632,
	0x5d3:     0x0633,
	0x5d4:     0x0634,
	0x5d5:     0x0635,
	0x5d6:     0x0636,
	0x5d7:     0x0637,
	0x5d8:     0x0638,
	0x5d9:     0x0639,
	0x5da:     0x063A,
	0x5e0:     0x0640,
	0x5e1:     0x0641,
	0x5e2:     0x0642,
	0x5e3:     0x0643,
	0x5e4:     0x0644,
	0x5e5:     0x0645,
	0x5e6:     0x0646,
	0x5e7:     0x0647,
	0x5e8:     0x0648,
	0x5e9:     0x0649,
	0x5ea:     0x064A,
	0x5eb:     0x064B,
	0x5ec:     0x064C,
	0x5ed:     0x064D,
	0x5ee:     0x064E,
	0x5ef:     0x064F,
	0x5f0:     0x0650,
	0x5f1:     0x0651,
	0x5f2:     0x0652,
	0x1000653: 0x0653,
	0x1000654: 0x0654,
	0x1000655: 0x0655,
	0x1000698: 0x0698,
	0x10006a4: 0x06A4,
	0x10006a9: 0x06A9,
	0x10006af: 0x06AF,
	0x10006ba: 0x06BA,
	0x10006be: 0x06BE,
	0x10006cc: 0x06CC,
	0x10006d2: 0x06D2,
	0x10006c1: 0x06C1,
	0x1000492: 0x0492,
	0x1000493: 0x0493,
	0x1000496: 0x0496,
	0x1000497: 0x0497,
	0x100049a: 0x049A,
	0x100049b: 0x049B,
	0x100049c: 0x049C,
	0x100049d: 0x049D,
	0x10004a2: 0x04A2,
	0x10004a3: 0x04A3,
	0x10004ae: 0x04AE,
	0x10004af: 0x04AF,
	0x10004b0: 0x04B0,
	0x10004b1: 0x04B1,
	0x10004b2: 0x04B2,
	0x10004b3: 0x04B3,
	0x10004b6: 0x04B6,
	0x10004b7: 0x04B7,
	0x10004b8: 0x04B8,
	0x10004b9: 0x04B9,
	0x10004ba: 0x04BA,
	0x10004bb: 0x04BB,
	0x10004d8: 0x04D8,
	0x10004d9: 0x04D9,
	0x10004e2: 0x04E2,
	0x10004e3: 0x04E3,
	0x10004e8: 0x04E8,
	0x10004e9: 0x04E9,
	0x10004ee: 0x04EE,
	0x10004ef: 0x04EF,
	0x6a1:     0x0452,
	0x6a2:     0x0453,
	0x6a3:     0x0451,
	0x6a4:     0x0454,
	0x6a5:     0x0455,
	0x6a6:     0x0456,
	0x6a7:     0x0457,
	0x6a8:     0x0458,
	0x6a9:     0x0459,
	0x6aa:     0x045A,
	0x6ab:     0x045B,
	0x6ac:     0x045C,
	0x6ad:     0x0491,
	0x6ae:     0x045E,
	0x6af:     0x045F,
	0x6b0:     0x2116,
	0x6b1:     0x0402,
	0x6b2:     0x0403,
	0x6b3:     0x0401,
	0x6b4:     0x0404,
	0x6b5:     0x0405,
	0x6b6:     0x0406,
	0x6b7:     0x0407,
	0x6b8:     0x0408,
	0x6b9:     0x0409,
	0x6ba:     0x040A,
	0x6bb:     0x040B,
	0x6bc:     0x040C,
	0x6bd:     0x0490,
	0x6be:     0x040E,
	0x6bf:     0x040F,
	0x6c0:     0x044E,
	0x6c1:     0x0430,
	0x6c2:     0x0431,
	0x6c3:     0x0446,
	0x6c4:     0x0434,
	0x6c5:     0x0435,
	0x6c6:     0x0444,
	0x6c7:     0x0433,
	0x6c8:     0x0445,
	0x6c9:     0x0438,
	0x6ca:     0x0439,
	0x6cb:     0x043A,
	0x6cc:     0x043B,
	0x6cd:     0x043C,
	0x6ce:     0x043D,
	0x6cf:     0x043E,
	0x6d0:     0x043F,
	0x6d1:     0x044F,
	0x6d2:     0x0440,
	0x6d3:     0x0441,
	0x6d4:     0x0442,
	0x6d5:     0x0443,
	0x6d6:     0x0436,
	0x6d7:     0x0432,
	0x6d8:     0x044C,
	0x6d9:     0x044B,
	0x6da:     0x0437,
	0x6db:     0x0448,
	0x6dc:     0x044D,
	0x6dd:     0x0449,
	0x6de:     0x0447,
	0x6df:     0x044A,
	0x6e0:     0x042E,
	0x6e1:     0x0410,
	0x6e2:     0x0411,
	0x6e3:     0x0426,
	0x6e4:     0x0414,
	0x6e5:     0x0415,
	0x6e6:     0x0424,
	0x6e7:     0x0413,
	0x6e8:     0x0425,
	0x6e9:     0x0418,
	0x6ea:     0x0419,
	0x6eb:     0x041A,
	0x6ec:     0x041B,
	0x6ed:     0x041C,
	0x6ee:     0x041D,
	0x6ef:     0x041E,
	0x6f0:     0x041F,
	0x6f1:     0x042F,
	0x6f2:     0x0420,
	0x6f3:     0x0421,
	0x6f4:     0x0422,
	0x6f5:     0x0423,
	0x6f6:     0x0416,
	0x6f7:     0x0412,
	0x6f8:     0x042C,
	0x6f9:     0x042B,
	0x6fa:     0x0417,
	0x6fb:     0x0428,
	0x6fc:     0x042D,
	0x6fd:     0x0429,
	0x6fe:     0x0427,
	0x6ff:     0x042A,
	0x7a1:     0x0386,
	0x7a2:     0x0388,
	0x7a3:     0x0389,
	0x7a4:     0x038A,
	0x7a5:     0x03AA,
	0x7a7:     0x038C,
	0x7a8:     0x038E,
	0x7a9:     0x03AB,
	0x7ab:     0x038F,
	0x7ae:     0x0385,
	0x7af:     0x2015,
	0x7b1:     0x03AC,
	0x7b2:     0x03AD,
	0x7b3:     0x03AE,
	0x7b4:     0x03AF,
	0x7b5:     0x03CA,
	0x7b6:     0x0390,
	0x7b7:     0x03CC,
	0x7b8:     0x03CD,
	0x7b9:     0x03CB,
	0x7ba:     0x03B0,
	0x7bb:     0x03CE,
	0x7c1:     0x0391,
	0x7c2:     0x0392,
	0x7c3:     0x0393,
	0x7c4:     0x0394,
	0x7c5:     0x0395,
	0x7c6:     0x0396,
	0x7c7:     0x0397,
	0x7c8:     0x0398,
	0x7c9:     0x0399,
	0x7ca:     0x039A,
	0x7cb:     0x039B,
	0x7cc:     0x039C,
	0x7cd:     0x039D,
	0x7ce:     0x039E,
	0x7cf:     0x039F,
	0x7d0:     0x03A0,
	0x7d1:     0x03A1,
	0x7d2:     0x03A3,
	0x7d4:     0x03A4,
	0x7d5:     0x03A5,
	0x7d6:     0x03A6,
	0x7d7:     0x03A7,
	0x7d8:     0x03A8,
	0x7d9:     0x03A9,
	0x7e1:     0x03B1,
	0x7e2:     0x03B2,
	0x7e3:     0x03B3,
	0x7e4:     0x03B4,
	0x7e5:     0x03B5,
	0x7e6:     0x03B6,
	0x7e7:     0x03B7,
	0x7e8:     0x03B8,
	0x7e9:     0x03B9,
	0x7ea:     0x03BA,
	0x7eb:     0x03BB,
	0x7ec:     0x03BC,
	0x7ed:     0x03BD,
	0x7ee:     0x03BE,
	0x7ef:     0x03BF,
	0x7f0:     0x03C0,
	0x7f1:     0x03C1,
	0x7f2:     0x03C3,
	0x7f3:     0x03C2,
	0x7f4:     0x03C4,
	0x7f5:     0x03C5,
	0x7f6:     0x03C6,
	0x7f7:     0x03C7,
	0x7f8:     0x03C8,
	0x7f9:     0x03C9,
	0x8a1:     0x23B7,
	0x8a4:     0x2320,
	0x8a5:     0x2321,
	0x8a7:     0x23A1,
	0x8a8:     0x23A3,
	0x8a9:     0x23A4,
	0x8aa:     0x23A6,
	0x8ab:     0x239B,
	0x8ac:     0x239D,
	0x8ad:     0x239E,
	0x8ae:     0x23A0,
	0x8af:     0x23A8,
	0x8b0:     0x23AC,
	0x8bc:     0x2264,
	0x8bd:     0x2260,
	0x8be:     0x2265,
	0x8bf:     0x222B,
	0x8c0:     0x2234,
	0x8c1:     0x221D,
	0x8c2:     0x221E,
	0x8c5:     0x2207,
	0x8c8:     0x223C,
	0x8c9:     0x2243,
	0x8cd:     0x21D4,
	0x8ce:     0x21D2,
	0x8cf:     0x2261,
	0x8d6:     0x221A,
	0x8da:     0x2282,
	0x8db:     0x2283,
	0x8dc:     0x2229,
	0x8dd:     0x222A,
	0x8de:     0x2227,
	0x8df:     0x2228,
	0x8ef:     0x2202,
	0x8f6:     0x0192,
	0x8fb:     0x2190,
	0x8fc:     0x2191,
	0x8fd:     0x2192,
	0x8fe:     0x2193,
	0x9e0:     0x25C6,
	0x9e1:     0x2592,
	0x9e2:     0x2409,
	0x9e3:     0x240C,
	0x9e4:     0x240D,
	0x9e5:     0x240A,
	0x9e8:     0x2424,
	0x9e9:     0x240B,
	0x9ea:     0x2518,
	0x9eb:     0x2510,
	0x9ec:     0x250C,
	0x9ed:     0x2514,
	0x9ee:     0x253C,
	0x9ef:     0x23BA,
	0x9f0:     0x23BB,
	0x9f1:     0x2500,
	0x9f2:     0x23BC,
	0x9f3:     0x23BD,
	0x9f4:     0x251C,
	0x9f5:     0x2524,
	0x9f6:     0x2534,
	0x9f7:     0x252C,
	0x9f8:     0x2502,
	0xaa1:     0x2003,
	0xaa2:     0x2002,
	0xaa3:     0x2004,
	0xaa4:     0x2005,
	0xaa5:     0x2007,
	0xaa6:     0x2008,
	0xaa7:     0x2009,
	0xaa8:     0x200A,
	0xaa9:     0x2014,
	0xaaa:     0x2013,
	0xaae:     0x2026,
	0xaaf:     0x2025,
	0xab0:     0x2153,
	0xab1:     0x2154,
	0xab2:     0x2155,
	0xab3:     0x2156,
	0xab4:     0x2157,
	0xab5:     0x2158,
	0xab6:     0x2159,
	0xab7:     0x215A,
	0xab8:     0x2105,
	0xabb:     0x2012,
	0xac3:     0x215B,
	0xac4:     0x215C,
	0xac5:     0x215D,
	0xac6:     0x215E,
	0xac9:     0x2122,
	0xad0:     0x2018,
	0xad1:     0x2019,
	0xad2:     0x201C,
	0xad3:     0x201D,
	0xad4:     0x211E,
	0xad5:     0x2030,
	0xad6:     0x2032,
	0xad7:     0x2033,
	0xad9:     0x271D,
	0xaec:     0x2663,
	0xaed:     0x2666,
	0xaee:     0x2665,
	0xaf0:     0x2720,
	0xaf1:     0x2020,
	0xaf2:     0x2021,
	0xaf3:     0x2713,
	0xaf4:     0x2717,
	0xaf5:     0x266F,
	0xaf6:     0x266D,
	0xaf7:     0x2642,
	0xaf8:     0x2640,
	0xaf9:     0x260E,
	0xafa:     0x2315,
	0xafb:     0x2117,
	0xafc:     0x2038,
	0xafd:     0x201A,
	0xafe:     0x201E,
	0xbc2:     0x22A4,
	0xbc4:     0x230A,
	0xbca:     0x2218,
	0xbcc:     0x2395,
	0xbce:     0x22A5,
	0xbcf:     0x25CB,
	0xbd3:     0x2308,
	0xbdc:     0x22A3,
	0xbfc:     0x22A2,
	0xcdf:     0x2017,
	0xce0:     0x05D0,
	0xce1:     0x05D1,
	0xce2:     0x05D2,
	0xce3:     0x05D3,
	0xce4:     0x05D4,
	0xce5:     0x05D5,
	0xce6:     0x05D6,
	0xce7:     0x05D7,
	0xce8:     0x05D8,
	0xce9:     0x05D9,
	0xcea:     0x05DA,
	0xceb:     0x05DB,
	0xcec:     0x05DC,
	0xced:     0x05DD,
	0xcee:     0x05DE,
	0xcef:     0x05DF,
	0xcf0:     0x05E0,
	0xcf1:     0x05E1,
	0xcf2:     0x05E2,
	0xcf3:     0x05E3,
	0xcf4:     0x05E4,
	0xcf5:     0x05E5,
	0xcf6:     0x05E6,
	0xcf7:     0x05E7,
	0xcf8:     0x05E8,
	0xcf9:     0x05E9,
	0xcfa:     0x05EA,
	0xda1:     0x0E01,
	0xda2:     0x0E02,
	0xda3:     0x0E03,
	0xda4:     0x0E04,
	0xda5:     0x0E05,
	0xda6:     0x0E06,
	0xda7:     0x0E07,
	0xda8:     0x0E08,
	0xda9:     0x0E09,
	0xdaa:     0x0E0A,
	0xdab:     0x0E0B,
	0xdac:     0x0E0C,
	0xdad:     0x0E0D,
	0xdae:     0x0E0E,
	0xdaf:     0x0E0F,
	0xdb0:     0x0E10,
	0xdb1:     0x0E11,
	0xdb2:     0x0E12,
	0xdb3:     0x0E13,
	0xdb4:     0x0E14,
	0xdb5:     0x0E15,
	0xdb6:     0x0E16,
	0xdb7:     0x0E17,
	0xdb8:     0x0E18,
	0xdb9:     0x0E19,
	0xdba:     0x0E1A,
	0xdbb:     0x0E1B,
	0xdbc:     0x0E1C,
	0xdbd:     0x0E1D,
	0xdbe:     0x0E1E,
	0xdbf:     0x0E1F,
	0xdc0:     0x0E20,
	0xdc1:     0x0E21,
	0xdc2:     0x0E22,
	0xdc3:     0x0E23,
	0xdc4:     0x0E24,
	0xdc5:     0x0E25,
	0xdc6:     0x0E26,
	0xdc7:     0x0E27,
	0xdc8:     0x0E28,
	0xdc9:     0x0E29,
	0xdca:     0x0E2A,
	0xdcb:     0x0E2B,
	0xdcc:     0x0E2C,
	0xdcd:     0x0E2D,
	0xdce:     0x0E2E,
	0xdcf:     0x0E2F,
	0xdd0:     0x0E30,
	0xdd1:     0x0E31,
	0xdd2:     0x0E32,
	0xdd3:     0x0E33,
	0xdd4:     0x0E34,
	0xdd5:     0x0E35,
	0xdd6:     0x0E36,
	0xdd7:     0x0E37,
	0xdd8:     0x0E38,
	0xdd9:     0x0E39,
	0xdda:     0x0E3A,
	0xddf:     0x0E3F,
	0xde0:     0x0E40,
	0xde1:     0x0E41,
	0xde2:     0x0E42,
	0xde3:     0x0E43,
	0xde4:     0x0E44,
	0xde5:     0x0E45,
	0xde6:     0x0E46,
	0xde7:     0x0E47,
	0xde8:     0x0E48,
	0xde9:     0x0E49,
	0xdea:     0x0E4A,
	0xdeb:     0x0E4B,
	0xdec:     0x0E4C,
	0xded:     0x0E4D,
	0xdf0:     0x0E50,
	0xdf1:     0x0E51,
	0xdf2:     0x0E52,
	0xdf3:     0x0E53,
	0xdf4:     0x0E54,
	0xdf5:     0x0E55,
	0xdf6:     0x0E56,
	0xdf7:     0x0E57,
	0xdf8:     0x0E58,
	0xdf9:     0x0E59,
	0x1000587: 0x0587,
	0x1000589: 0x0589,
	0x100055d: 0x055D,
	0x100058a: 0x058A,
	0x100055c: 0x055C,
	0x100055b: 0x055B,
	0x100055e: 0x055E,
	0x1000531: 0x0531,
	0x1000561: 0x0561,
	0x1000532: 0x0532,
	0x1000562: 0x0562,
	0x1000533: 0x0533,
	0x1000563: 0x0563,
	0x1000534: 0x0534,
	0x1000564: 0x0564,
	0x1000535: 0x0535,
	0x1000565: 0x0565,
	0x1000536: 0x0536,
	0x1000566: 0x0566,
	0x1000537: 0x0537,
	0x1000567: 0x0567,
	0x1000538: 0x0538,
	0x1000568: 0x0568,
	0x1000539: 0x0539,
	0x1000569: 0x0569,
	0x100053a: 0x053A,
	0x100056a: 0x056A,
	0x100053b: 0x053B,
	0x100056b: 0x056B,
	0x100053c: 0x053C,
	0x100056c: 0x056C,
	0x100053d: 0x053D,
	0x100056d: 0x056D,
	0x100053e: 0x053E,
	0x100056e: 0x056E,
	0x100053f: 0x053F,
	0x100056f: 0x056F,
	0x1000540: 0x0540,
	0x1000570: 0x0570,
	0x1000541: 0x0541,
	0x1000571: 0x0571,
	0x1000542: 0x0542,
	0x1000572: 0x0572,
	0x1000543: 0x0543,
	0x1000573: 0x0573,
	0x1000544: 0x0544,
	0x1000574: 0x0574,
	0x1000545: 0x0545,
	0x1000575: 0x0575,
	0x1000546: 0x0546,
	0x1000576: 0x0576,
	0x1000547: 0x0547,
	0x1000577: 0x0577,
	0x1000548: 0x0548,
	0x1000578: 0x0578,
	0x1000549: 0x0549,
	0x1000579: 0x0579,
	0x100054a: 0x054A,
	0x100057a: 0x057A,
	0x100054b: 0x054B,
	0x100057b: 0x057B,
	0x100054c: 0x054C,
	0x100057c: 0x057C,
	0x100054d: 0x054D,
	0x100057d: 0x057D,
	0x100054e: 0x054E,
	0x100057e: 0x057E,
	0x100054f: 0x054F,
	0x100057f: 0x057F,
	0x1000550: 0x0550,
	0x1000580: 0x0580,
	0x1000551: 0x0551,
	0x1000581: 0x0581,
	0x1000552: 0x0552,
	0x1000582: 0x0582,
	0x1000553: 0x0553,
	0x1000583: 0x0583,
	0x1000554: 0x0554,
	0x1000584: 0x0584,
	0x1000555: 0x0555,
	0x1000585: 0x0585,
	0x1000556: 0x0556,
	0x1000586: 0x0586,
	0x100055a: 0x055A,
	0x10010d0: 0x10D0,
	0x10010d1: 0x10D1,
	0x10010d2: 0x10D2,
	0x10010d3: 0x10D3,
	0x10010d4: 0x10D4,
	0x10010d5: 0x10D5,
	0x10010d6: 0x10D6,
	0x10010d7: 0x10D7,
	0x10010d8: 0x10D8,
	0x10010d9: 0x10D9,
	0x10010da: 0x10DA,
	0x10010db: 0x10DB,
	0x10010dc: 0x10DC,
	0x10010dd: 0x10DD,
	0x10010de: 0x10DE,
	0x10010df: 0x10DF,
	0x10010e0: 0x10E0,
	0x10010e1: 0x10E1,
	0x10010e2: 0x10E2,
	0x10010e3: 0x10E3,
	0x10010e4: 0x10E4,
	0x10010e5: 0x10E5,
	0x10010e6: 0x10E6,
	0x10010e7: 0x10E7,
	0x10010e8: 0x10E8,
	0x10010e9: 0x10E9,
	0x10010ea: 0x10EA,
	0x10010eb: 0x10EB,
	0x10010ec: 0x10EC,
	0x10010ed: 0x10ED,
	0x10010ee: 0x10EE,
	0x10010ef: 0x10EF,
	0x10010f0: 0x10F0,
	0x10010f1: 0x10F1,
	0x10010f2: 0x10F2,
	0x10010f3: 0x10F3,
	0x10010f4: 0x10F4,
	0x10010f5: 0x10F5,
	0x10010f6: 0x10F6,
	0x1001e8a: 0x1E8A,
	0x100012c: 0x012C,
	0x10001b5: 0x01B5,
	0x10001e6: 0x01E6,
	0x10001d1: 0x01D2,
	0x100019f: 0x019F,
	0x1001e8b: 0x1E8B,
	0x100012d: 0x012D,
	0x10001b6: 0x01B6,
	0x10001e7: 0x01E7,
	0x10001d2: 0x01D2,
	0x1000275: 0x0275,
	0x100018f: 0x018F,
	0x1000259: 0x0259,
	0x10001b7: 0x01B7,
	0x1000292: 0x0292,
	0x1001e36: 0x1E36,
	0x1001e37: 0x1E37,
	0x1001ea0: 0x1EA0,
	0x1001ea1: 0x1EA1,
	0x1001ea2: 0x1EA2,
	0x1001ea3: 0x1EA3,
	0x1001ea4: 0x1EA4,
	0x1001ea5: 0x1EA5,
	0x1001ea6: 0x1EA6,
	0x1001ea7: 0x1EA7,
	0x1001ea8: 0x1EA8,
	0x1001ea9: 0x1EA9,
	0x1001eaa: 0x1EAA,
	0x1001eab: 0x1EAB,
	0x1001eac: 0x1EAC,
	0x1001ead: 0x1EAD,
	0x1001eae: 0x1EAE,
	0x1001eaf: 0x1EAF,
	0x1001eb0: 0x1EB0,
	0x1001eb1: 0x1EB1,
	0x1001eb2: 0x1EB2,
	0x1001eb3: 0x1EB3,
	0x1001eb4: 0x1EB4,
	0x1001eb5: 0x1EB5,
	0x1001eb6: 0x1EB6,
	0x1001eb7: 0x1EB7,
	0x1001eb8: 0x1EB8,
	0x1001eb9: 0x1EB9,
	0x1001eba: 0x1EBA,
	0x1001ebb: 0x1EBB,
	0x1001ebc: 0x1EBC,
	0x1001ebd: 0x1EBD,
	0x1001ebe: 0x1EBE,
	0x1001ebf: 0x1EBF,
	0x1001ec0: 0x1EC0,
	0x1001ec1: 0x1EC1,
	0x1001ec2: 0x1EC2,
	0x1001ec3: 0x1EC3,
	0x1001ec4: 0x1EC4,
	0x1001ec5: 0x1EC5,
	0x1001ec6: 0x1EC6,
	0x1001ec7: 0x1EC7,
	0x1001ec8: 0x1EC8,
	0x1001ec9: 0x1EC9,
	0x1001eca: 0x1ECA,
	0x1001ecb: 0x1ECB,
	0x1001ecc: 0x1ECC,
	0x1001ecd: 0x1ECD,
	0x1001ece: 0x1ECE,
	0x1001ecf: 0x1ECF,
	0x1001ed0: 0x1ED0,
	0x1001ed1: 0x1ED1,
	0x1001ed2: 0x1ED2,
	0x1001ed3: 0x1ED3,
	0x1001ed4: 0x1ED4,
	0x1001ed5: 0x1ED5,
	0x1001ed6: 0x1ED6,
	0x1001ed7: 0x1ED7,
	0x1001ed8: 0x1ED8,
	0x1001ed9: 0x1ED9,
	0x1001eda: 0x1EDA,
	0x1001edb: 0x1EDB,
	0x1001edc: 0x1EDC,
	0x1001edd: 0x1EDD,
	0x1001ede: 0x1EDE,
	0x1001edf: 0x1EDF,
	0x1001ee0: 0x1EE0,
	0x1001ee1: 0x1EE1,
	0x1001ee2: 0x1EE2,
	0x1001ee3: 0x1EE3,
	0x1001ee4: 0x1EE4,
	0x1001ee5: 0x1EE5,
	0x1001ee6: 0x1EE6,
	0x1001ee7: 0x1EE7,
	0x1001ee8: 0x1EE8,
	0x1001ee9: 0x1EE9,
	0x1001eea: 0x1EEA,
	0x1001eeb: 0x1EEB,
	0x1001eec: 0x1EEC,
	0x1001eed: 0x1EED,
	0x1001eee: 0x1EEE,
	0x1001eef: 0x1EEF,
	0x1001ef0: 0x1EF0,
	0x1001ef1: 0x1EF1,
	0x1001ef4: 0x1EF4,
	0x1001ef5: 0x1EF5,
	0x1001ef6: 0x1EF6,
	0x1001ef7: 0x1EF7,
	0x1001ef8: 0x1EF8,
	0x1001ef9: 0x1EF9,
	0x10001a0: 0x01A0,
	0x10001a1: 0x01A1,
	0x10001af: 0x01AF,
	0x10001b0: 0x01B0,
	0x10020a0: 0x20A0,
	0x10020a1: 0x20A1,
	0x10020a2: 0x20A2,
	0x10020a3: 0x20A3,
	0x10020a4: 0x20A4,
	0x10020a5: 0x20A5,
	0x10020a6: 0x20A6,
	0x10020a7: 0x20A7,
	0x10020a8: 0x20A8,
	0x10020a9: 0x20A9,
	0x10020aa: 0x20AA,
	0x10020ab: 0x20AB,
	0x20ac:    0x20AC,
	0x1002070: 0x2070,
	0x1002074: 0x2074,
	0x1002075: 0x2075,
	0x1002076: 0x2076,
	0x1002077: 0x2077,
	0x1002078: 0x2078,
	0x1002079: 0x2079,
	0x1002080: 0x2080,
	0x1002081: 0x2081,
	0x1002082: 0x2082,
	0x1002083: 0x2083,
	0x1002084: 0x2084,
	0x1002085: 0x2085,
	0x1002086: 0x2086,
	0x1002087: 0x2087,
	0x1002088: 0x2088,
	0x1002089: 0x2089,
	0x1002202: 0x2202,
	0x1002205: 0x2205,
	0x1002208: 0x2208,
	0x1002209: 0x2209,
	0x100220b: 0x220B,
	0x100221a: 0x221A,
	0x100221b: 0x221B,
	0x100221c: 0x221C,
	0x100222c: 0x222C,
	0x100222d: 0x222D,
	0x1002235: 0x2235,
	0x1002248: 0x2245,
	0x1002247: 0x2247,
	0x1002262: 0x2262,
	0x1002263: 0x2263,
	0x1002800: 0x2800,
	0x1002801: 0x2801,
	0x1002802: 0x2802,
	0x1002803: 0x2803,
	0x1002804: 0x2804,
	0x1002805: 0x2805,
	0x1002806: 0x2806,
	0x1002807: 0x2807,
	0x1002808: 0x2808,
	0x1002809: 0x2809,
	0x100280a: 0x280a,
	0x100280b: 0x280b,
	0x100280c: 0x280c,
	0x100280d: 0x280d,
	0x100280e: 0x280e,
	0x100280f: 0x280f,
	0x1002810: 0x2810,
	0x1002811: 0x2811,
	0x1002812: 0x2812,
	0x1002813: 0x2813,
	0x1002814: 0x2814,
	0x1002815: 0x2815,
	0x1002816: 0x2816,
	0x1002817: 0x2817,
	0x1002818: 0x2818,
	0x1002819: 0x2819,
	0x100281a: 0x281a,
	0x100281b: 0x281b,
	0x100281c: 0x281c,
	0x100281d: 0x281d,
	0x100281e: 0x281e,
	0x100281f: 0x281f,
	0x1002820: 0x2820,
	0x1002821: 0x2821,
	0x1002822: 0x2822,
	0x1002823: 0x2823,
	0x1002824: 0x2824,
	0x1002825: 0x2825,
	0x1002826: 0x2826,
	0x1002827: 0x2827,
	0x1002828: 0x2828,
	0x1002829: 0x2829,
	0x100282a: 0x282a,
	0x100282b: 0x282b,
	0x100282c: 0x282c,
	0x100282d: 0x282d,
	0x100282e: 0x282e,
	0x100282f: 0x282f,
	0x1002830: 0x2830,
	0x1002831: 0x2831,
	0x1002832: 0x2832,
	0x1002833: 0x2833,
	0x1002834: 0x2834,
	0x1002835: 0x2835,
	0x1002836: 0x2836,
	0x1002837: 0x2837,
	0x1002838: 0x2838,
	0x1002839: 0x2839,
	0x100283a: 0x283a,
	0x100283b: 0x283b,
	0x100283c: 0x283c,
	0x100283d: 0x283d,
	0x100283e: 0x283e,
	0x100283f: 0x283f,
	0x1002840: 0x2840,
	0x1002841: 0x2841,
	0x1002842: 0x2842,
	0x1002843: 0x2843,
	0x1002844: 0x2844,
	0x1002845: 0x2845,
	0x1002846: 0x2846,
	0x1002847: 0x2847,
	0x1002848: 0x2848,
	0x1002849: 0x2849,
	0x100284a: 0x284a,
	0x100284b: 0x284b,
	0x100284c: 0x284c,
	0x100284d: 0x284d,
	0x100284e: 0x284e,
	0x100284f: 0x284f,
	0x1002850: 0x2850,
	0x1002851: 0x2851,
	0x1002852: 0x2852,
	0x1002853: 0x2853,
	0x1002854: 0x2854,
	0x1002855: 0x2855,
	0x1002856: 0x2856,
	0x1002857: 0x2857,
	0x1002858: 0x2858,
	0x1002859: 0x2859,
	0x100285a: 0x285a,
	0x100285b: 0x285b,
	0x100285c: 0x285c,
	0x100285d: 0x285d,
	0x100285e: 0x285e,
	0x100285f: 0x285f,
	0x1002860: 0x2860,
	0x1002861: 0x2861,
	0x1002862: 0x2862,
	0x1002863: 0x2863,
	0x1002864: 0x2864,
	0x1002865: 0x2865,
	0x1002866: 0x2866,
	0x1002867: 0x2867,
	0x1002868: 0x2868,
	0x1002869: 0x2869,
	0x100286a: 0x286a,
	0x100286b: 0x286b,
	0x100286c: 0x286c,
	0x100286d: 0x286d,
	0x100286e: 0x286e,
	0x100286f: 0x286f,
	0x1002870: 0x2870,
	0x1002871: 0x2871,
	0x1002872: 0x2872,
	0x1002873: 0x2873,
	0x1002874: 0x2874,
	0x1002875: 0x2875,
	0x1002876: 0x2876,
	0x1002877: 0x2877,
	0x1002878: 0x2878,
	0x1002879: 0x2879,
	0x100287a: 0x287a,
	0x100287b: 0x287b,
	0x100287c: 0x287c,
	0x100287d: 0x287d,
	0x100287e: 0x287e,
	0x100287f: 0x287f,
	0x1002880: 0x2880,
	0x1002881: 0x2881,
	0x1002882: 0x2882,
	0x1002883: 0x2883,
	0x1002884: 0x2884,
	0x1002885: 0x2885,
	0x1002886: 0x2886,
	0x1002887: 0x2887,
	0x1002888: 0x2888,
	0x1002889: 0x2889,
	0x100288a: 0x288a,
	0x100288b: 0x288b,
	0x100288c: 0x288c,
	0x100288d: 0x288d,
	0x100288e: 0x288e,
	0x100288f: 0x288f,
	0x1002890: 0x2890,
	0x1002891: 0x2891,
	0x1002892: 0x2892,
	0x1002893: 0x2893,
	0x1002894: 0x2894,
	0x1002895: 0x2895,
	0x1002896: 0x2896,
	0x1002897: 0x2897,
	0x1002898: 0x2898,
	0x1002899: 0x2899,
	0x100289a: 0x289a,
	0x100289b: 0x289b,
	0x100289c: 0x289c,
	0x100289d: 0x289d,
	0x100289e: 0x289e,
	0x100289f: 0x289f,
	0x10028a0: 0x28a0,
	0x10028a1: 0x28a1,
	0x10028a2: 0x28a2,
	0x10028a3: 0x28a3,
	0x10028a4: 0x28a4,
	0x10028a5: 0x28a5,
	0x10028a6: 0x28a6,
	0x10028a7: 0x28a7,
	0x10028a8: 0x28a8,
	0x10028a9: 0x28a9,
	0x10028aa: 0x28aa,
	0x10028ab: 0x28ab,
	0x10028ac: 0x28ac,
	0x10028ad: 0x28ad,
	0x10028ae: 0x28ae,
	0x10028af: 0x28af,
	0x10028b0: 0x28b0,
	0x10028b1: 0x28b1,
	0x10028b2: 0x28b2,
	0x10028b3: 0x28b3,
	0x10028b4: 0x28b4,
	0x10028b5: 0x28b5,
	0x10028b6: 0x28b6,
	0x10028b7: 0x28b7,
	0x10028b8: 0x28b8,
	0x10028b9: 0x28b9,
	0x10028ba: 0x28ba,
	0x10028bb: 0x28bb,
	0x10028bc: 0x28bc,
	0x10028bd: 0x28bd,
	0x10028be: 0x28be,
	0x10028bf: 0x28bf,
	0x10028c0: 0x28c0,
	0x10028c1: 0x28c1,
	0x10028c2: 0x28c2,
	0x10028c3: 0x28c3,
	0x10028c4: 0x28c4,
	0x10028c5: 0x28c5,
	0x10028c6: 0x28c6,
	0x10028c7: 0x28c7,
	0x10028c8: 0x28c8,
	0x10028c9: 0x28c9,
	0x10028ca: 0x28ca,
	0x10028cb: 0x28cb,
	0x10028cc: 0x28cc,
	0x10028cd: 0x28cd,
	0x10028ce: 0x28ce,
	0x10028cf: 0x28cf,
	0x10028d0: 0x28d0,
	0x10028d1: 0x28d1,
	0x10028d2: 0x28d2,
	0x10028d3: 0x28d3,
	0x10028d4: 0x28d4,
	0x10028d5: 0x28d5,
	0x10028d6: 0x28d6,
	0x10028d7: 0x28d7,
	0x10028d8: 0x28d8,
	0x10028d9: 0x28d9,
	0x10028da: 0x28da,
	0x10028db: 0x28db,
	0x10028dc: 0x28dc,
	0x10028dd: 0x28dd,
	0x10028de: 0x28de,
	0x10028df: 0x28df,
	0x10028e0: 0x28e0,
	0x10028e1: 0x28e1,
	0x10028e2: 0x28e2,
	0x10028e3: 0x28e3,
	0x10028e4: 0x28e4,
	0x10028e5: 0x28e5,
	0x10028e6: 0x28e6,
	0x10028e7: 0x28e7,
	0x10028e8: 0x28e8,
	0x10028e9: 0x28e9,
	0x10028ea: 0x28ea,
	0x10028eb: 0x28eb,
	0x10028ec: 0x28ec,
	0x10028ed: 0x28ed,
	0x10028ee: 0x28ee,
	0x10028ef: 0x28ef,
	0x10028f0: 0x28f0,
	0x10028f1: 0x28f1,
	0x10028f2: 0x28f2,
	0x10028f3: 0x28f3,
	0x10028f4: 0x28f4,
	0x10028f5: 0x28f5,
	0x10028f6: 0x28f6,
	0x10028f7: 0x28f7,
	0x10028f8: 0x28f8,
	0x10028f9: 0x28f9,
	0x10028fa: 0x28fa,
	0x10028fb: 0x28fb,
	0x10028fc: 0x28fc,
	0x10028fd: 0x28fd,
	0x10028fe: 0x28fe,
	0x10028ff: 0x28ff,
	0x1000d82: 0x0D82,
	0x1000d83: 0x0D83,
	0x1000d85: 0x0D85,
	0x1000d86: 0x0D86,
	0x1000d87: 0x0D87,
	0x1000d88: 0x0D88,
	0x1000d89: 0x0D89,
	0x1000d8a: 0x0D8A,
	0x1000d8b: 0x0D8B,
	0x1000d8c: 0x0D8C,
	0x1000d8d: 0x0D8D,
	0x1000d8e: 0x0D8E,
	0x1000d8f: 0x0D8F,
	0x1000d90: 0x0D90,
	0x1000d91: 0x0D91,
	0x1000d92: 0x0D92,
	0x1000d93: 0x0D93,
	0x1000d94: 0x0D94,
	0x1000d95: 0x0D95,
	0x1000d96: 0x0D96,
	0x1000d9a: 0x0D9A,
	0x1000d9b: 0x0D9B,
	0x1000d9c: 0x0D9C,
	0x1000d9d: 0x0D9D,
	0x1000d9e: 0x0D9E,
	0x1000d9f: 0x0D9F,
	0x1000da0: 0x0DA0,
	0x1000da1: 0x0DA1,
	0x1000da2: 0x0DA2,
	0x1000da3: 0x0DA3,
	0x1000da4: 0x0DA4,
	0x1000da5: 0x0DA5,
	0x1000da6: 0x0DA6,
	0x1000da7: 0x0DA7,
	0x1000da8: 0x0DA8,
	0x1000da9: 0x0DA9,
	0x1000daa: 0x0DAA,
	0x1000dab: 0x0DAB,
	0x1000dac: 0x0DAC,
	0x1000dad: 0x0DAD,
	0x1000dae: 0x0DAE,
	0x1000daf: 0x0DAF,
	0x1000db0: 0x0DB0,
	0x1000db1: 0x0DB1,
	0x1000db3: 0x0DB3,
	0x1000db4: 0x0DB4,
	0x1000db5: 0x0DB5,
	0x1000db6: 0x0DB6,
	0x1000db7: 0x0DB7,
	0x1000db8: 0x0DB8,
	0x1000db9: 0x0DB9,
	0x1000dba: 0x0DBA,
	0x1000dbb: 0x0DBB,
	0x1000dbd: 0x0DBD,
	0x1000dc0: 0x0DC0,
	0x1000dc1: 0x0DC1,
	0x1000dc2: 0x0DC2,
	0x1000dc3: 0x0DC3,
	0x1000dc4: 0x0DC4,
	0x1000dc5: 0x0DC5,
	0x1000dc6: 0x0DC6,
	0x1000dca: 0x0DCA,
	0x1000dcf: 0x0DCF,
	0x1000dd0: 0x0DD0,
	0x1000dd1: 0x0DD1,
	0x1000dd2: 0x0DD2,
	0x1000dd3: 0x0DD3,
	0x1000dd4: 0x0DD4,
	0x1000dd6: 0x0DD6,
	0x1000dd8: 0x0DD8,
	0x1000dd9: 0x0DD9,
	0x1000dda: 0x0DDA,
	0x1000ddb: 0x0DDB,
	0x1000ddc: 0x0DDC,
	0x1000ddd: 0x0DDD,
	0x1000dde: 0x0DDE,
	0x1000ddf: 0x0DDF,
	0x1000df2: 0x0DF2,
	0x1000df3: 0x0DF3,
	0x1000df4: 0x0DF4,
}
