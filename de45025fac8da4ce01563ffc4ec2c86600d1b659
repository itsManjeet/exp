{
  "comments": [
    {
      "key": {
        "uuid": "d470d2c5_dfde932f",
        "filename": "shiny/text/caret.go",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-01-25T00:51:00Z",
      "side": 1,
      "message": "Is it valid to position a caret inside a code point?",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_153374e6",
        "filename": "shiny/text/caret.go",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "Yes, although if the text added and deleted (via a Caret) are always valid UTF-8, and Carets are only ever moved by an integer number of runes (e.g. in response to hitting the right arrow key) or to the start or end of the frame, then a Caret will always stay on code point boundaries.",
      "parentUuid": "d470d2c5_dfde932f",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d470d2c5_3ffa2f99",
        "filename": "shiny/text/caret.go",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-01-25T00:51:00Z",
      "side": 1,
      "message": "Perhaps I should just wait to see what code follows this, but I\u0027m curious how text replacement will work with this model. (My instinct is a Caret should represent a continuous range.)",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_7528e872",
        "filename": "shiny/text/caret.go",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "A text selection is two carets: the start and end.\n\nI think that text replacement is simply deletion followed by insertion, but I\u0027m not exactly sure what you\u0027re wondering about.\n\nIn any case, the follow-up CLs will say it best.",
      "parentUuid": "d470d2c5_3ffa2f99",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d470d2c5_bfe5dff6",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-01-25T00:51:00Z",
      "side": 1,
      "message": "How big do Frames get?\n\nIf a Frame is only meant to be slightly larger than the screen, and it\u0027s the job of some other code to map subsets of files into a frame as it is scrolled, then storing the text as a []byte may work. (Though it\u0027s going to have to get pretty clever to avoid lots of big allocations when scrolling up.)\n\nBut if a Frame is meant to hold files that could reasonably be loaded into memory(~10MBs) then []byte isn\u0027t going to work with edits. Inserting text at the top of a Frame is going to get slow if each event copies hundreds of MB around in memory.\n\nIf it\u0027s the former, there should probably be a note in the comments. If it\u0027s the latter, how about a TODO on the text field referencing other data structures (like a gap buffer, https://en.wikipedia.org/wiki/Gap_buffer).",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_f5635818",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-01-25T03:39:59Z",
      "side": 1,
      "message": "capital P?",
      "range": {
        "startLine": 48,
        "startChar": 15,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_f51b585b",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "54686202_f5635818",
      "range": {
        "startLine": 48,
        "startChar": 15,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_951e644d",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "A Frame holds the entire document, not just the part visible on screen.\n\nThe Frame\u0027s []byte doesn\u0027t hold the text in layout order. It holds the text in edit (insertion) order (with occasional compactions). The two orders aren\u0027t necessarily the same. It should be fine with a 10MB []byte.\n\nOnce again, follow up CLs will probably make this clearer.",
      "parentUuid": "d470d2c5_bfe5dff6",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_9566642a",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-01-25T03:39:59Z",
      "side": 1,
      "message": "This comment is misleading.\nIt gives the impression that we will return the 0th paragraph here, when really we\u0027re returning the 1st.\nRephrase?",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_15eed470",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "54686202_9566642a",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_d560dc0e",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-01-25T03:39:59Z",
      "side": 1,
      "message": "It\u0027s a bit clunky to have to pass a *Frame into each of these methods. I assume you considered putting a *Frame field in Paragraph and Line, but didn\u0027t do so to reduce memory use. Is there another reason?\n\nI wonder if the tradeoff is worth it.\n\nI suppose your answers to crawshaw\u0027s questions will reveal more of your thinking.",
      "range": {
        "startLine": 133,
        "startChar": 30,
        "endLine": 133,
        "endChar": 38
      },
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_d518dc61",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "It\u0027s to reduce memory use. The backpointer seems redundant.",
      "parentUuid": "54686202_d560dc0e",
      "range": {
        "startLine": 133,
        "startChar": 30,
        "endLine": 133,
        "endChar": 38
      },
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d470d2c5_5f1283a7",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-01-25T00:51:00Z",
      "side": 1,
      "message": "Is []Box going to change sometime soon? If not, why not store a single value here, the index into the slice?",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54686202_35e95069",
        "filename": "shiny/text/text.go",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-01-25T07:03:14Z",
      "side": 1,
      "message": "The []Box doesn\u0027t store the Boxes in layout order. The slice is obviously backed by an array, but a Line\u0027s list of Boxes (and a Paragraph\u0027s list of Lines, and a Frame\u0027s list of Paragraphs) are a linked list, not an array list. The algorithmic complexity of insertions is important.",
      "parentUuid": "d470d2c5_5f1283a7",
      "revId": "de45025fac8da4ce01563ffc4ec2c86600d1b659",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}