{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42caff15_a3f18e7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-08T13:09:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc173328e\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c173328ed11c751beb67290af8fc7d0646b92709",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41fe7801_36f9a468",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-08T13:11:29Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "42caff15_a3f18e7b",
      "tag": "autogenerated:trybots~happy",
      "revId": "c173328ed11c751beb67290af8fc7d0646b92709",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7d0d9e4_aa9f3a9c",
        "filename": "apidiff/correspondence.go",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-07-10T16:48:34Z",
      "side": 1,
      "message": "This doc comment is slightly inaccurate. How about\n\n```\n// establishCorrespondence records and validates a correspondence between\n// old and new.\n//\n// If this is the first type corresponding to old, it checks that the type\n// declaration is compatible with old and records its correspondence.\n// Otherwise, it checks that new is equivalent to the previously recorded\n// type corresponding to old.\n```",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 32
      },
      "revId": "c173328ed11c751beb67290af8fc7d0646b92709",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}