{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7b6781_aec8c5f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-17T21:51:12Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de816b097",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b061c93_98c37a78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-17T21:59:53Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "fa7b6781_aec8c5f2",
      "tag": "autogenerated:trybots~happy",
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b15bb9_6ddba4e4",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "\"Vulnerabilities in dependent modules\"",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 36,
        "endChar": 51
      },
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfab8551_a34c1dc7",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "I\u0027m also not particularly convinced of the value of exporting this field. At least for now the user is passing in ModuleVulnerabilities, so they know the vulnerabilities already, and the mapping between modules and vulnerabilities is probably more valuable than just the slice.",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f63903a_507c61a7",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "This output is somewhat hard to read, perhaps a somewhat more readable output would be something along the lines of\n\n  Findings:\n    * \u003cpackage name\u003e - \u003cvulndb ID\u003e (\u003cvulnerability aliases)\n      Trace A\n      ---\n      Trace B\n  \n    * \u003cpackage name\u003e - \u003cvulndb ID\u003e (\u003cvulnerability aliases)\n      Trace A\n  \n  ...\n  Unused(?) vulnerabilities in dependent modules:\n    * \u003cpackage name\u003e - \u003cvulndb ID\u003e (reason)\n    * \u003cpackage name\u003e - \u003cvulndb ID\u003e (reason)\n    \n(We should be explicitly separating vulnerabilities which have callsites, vs those which don\u0027t, in order to make it more obvious what is affected and what isn\u0027t)",
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "915cca86_4335480c",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "We do not know if this package was imported. The ModuleVulnerabilities passed in contains vulnerabilities for all packages within each dependent module, if we want to present this information we need to filter the vulnerabilities based on our knowledge of the imported packages.",
      "range": {
        "startLine": 67,
        "startChar": 12,
        "endLine": 67,
        "endChar": 28
      },
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1acf5de_83ad195e",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 112,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "Unrelated to this particular change, but this seems to emit a lot of new lines when the trace is empty (which is often the case in import and binary search modes?)",
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4085e7e0_d573ee51",
        "filename": "vulndb/internal/audit/detect.go",
        "patchSetId": 10
      },
      "lineNbr": 269,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-08-18T16:57:49Z",
      "side": 1,
      "message": "This needs to de-duplicate vulnerabilities, since one vulnerability may appear for multiple modules.",
      "revId": "e816b0977e4b69bc5e5c58a8fa88717d7db78f7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}