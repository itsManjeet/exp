{
  "comments": [
    {
      "key": {
        "uuid": "dfd5e997_83fe561b",
        "filename": "notary/internal/tlog/tile.go",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "storage index",
      "range": {
        "startLine": 40,
        "startChar": 42,
        "endLine": 40,
        "endChar": 47
      },
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "028625c2_080f93e9",
        "filename": "notary/internal/tlog/tile.go",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "Shouldn\u0027t this be 3000?\n\n1000 NNN, 1000 xNNN, 1000 NNN.p.",
      "range": {
        "startLine": 157,
        "startChar": 26,
        "endLine": 157,
        "endChar": 38
      },
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4ab5b2_8b945464",
        "filename": "notary/internal/tlog/tile.go",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "I am not at all convinced by this bottom-up authentication.\n\nI like that the TileHashReader does authentication, and that should stay, but each layer should be responsible for verifying what it fetched, and not rely on the layer below to report back as this method suggests. (I consider doing otherwise a sort of violation of The Cryptographic Doom Principle.)\n\nAlso, if a Reject implementation is broken it would probably permanently break the system if it leads to an invalid tile being cached.\n\nThere\u0027s no need to optimize for the case in which only some of the fetched tiles are invalid, because over TLS it can\u0027t be some transient corruption: it is an attack and we can even close the connection and fail the operation.",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 235,
        "endChar": 18
      },
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3dee606_c114f2c9",
        "filename": "notary/internal/tlog/tile.go",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "It\u0027s a bit unnerving that there are authenticating HashReaders and not authenticating HashReaders. It leads a downstream user to think that they can replace one HashReader with another (which is the point of interfaces), when actually certain uses require authentication and others don\u0027t, making implementations not interchangeable.",
      "range": {
        "startLine": 245,
        "startChar": 46,
        "endLine": 245,
        "endChar": 56
      },
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "121d685e_17382360",
        "filename": "notary/internal/tlog/tile.go",
        "patchSetId": 3
      },
      "lineNbr": 387,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "Making Reject even more dubious, here the TileReader will have fetched more tiles (and presumably cached them), but only the first incorrect one is rejected, so it will take many failed ReadHashes to clear the cache if a single batch of broken tiles is served.",
      "range": {
        "startLine": 386,
        "startChar": 0,
        "endLine": 387,
        "endChar": 57
      },
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b49a67a_ca6bd4ec",
        "filename": "notary/internal/tlog/tlog_test.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "This should set a flag that is then checked by the test to make sure it was called.\n\n(If the Reject method is staying, see comment on the interface definition.)",
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cb5aedb_9775ba1b",
        "filename": "notary/internal/tlog/tlog_test.go",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-01T22:59:46Z",
      "side": 1,
      "message": "Add tests for invalid paths, including \"tile/3/5/123/456/078\", which is kind of subtly checked in ParseTilePath.",
      "revId": "0c57779b942cf2cd5650e76edf422e43aca7ae82",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}