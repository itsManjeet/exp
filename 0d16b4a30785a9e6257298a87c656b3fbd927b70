{
  "comments": [
    {
      "key": {
        "uuid": "f0278e8e_0fa39ebd",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-11-06T23:37:56Z",
      "side": 1,
      "message": "matches",
      "range": {
        "startLine": 46,
        "startChar": 47,
        "endLine": 46,
        "endChar": 58
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ac4bd9d_1e8d9062",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0278e8e_0fa39ebd",
      "range": {
        "startLine": 46,
        "startChar": 47,
        "endLine": 46,
        "endChar": 58
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b575b25f_c6888406",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-11-06T23:37:56Z",
      "side": 1,
      "message": "match",
      "range": {
        "startLine": 48,
        "startChar": 29,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3a2efae_0e3f9d60",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b575b25f_c6888406",
      "range": {
        "startLine": 48,
        "startChar": 29,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cc54033_05d46f68",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5305
      },
      "writtenOn": "2018-11-13T19:07:41Z",
      "side": 1,
      "message": "A thought which I had while writing a response to Roger Peppe\u0027s comment (attaching here rather there, since this is a digression and I don\u0027t want to distract from his point):\n\nA tricky point about error (un)wrapping APIs is that a user failing to unwrap an error may not immediately notice their mistake:\n\n  // Wrong: Failed to unwrap err.\n  if err :\u003d p.F(); err \u003d\u003d p.ErrFoo {}\n\n  // Right.\n  if err :\u003d p.F(); errors.Cause(err) \u003d\u003d p.ErrFoo {}\n  if err :\u003d p.F(); errors.Is(err, p.ErrFoo) {}\n\nThe part which makes this particularly tricky is that the first case isn\u0027t obviously wrong. If p.F() doesn\u0027t return wrapped errors, the code will work today. If p.F() is then changed to wrap its errors, the code will become incorrect but will continue to compile.\n\nThe author of package p can mitigate this by always returning wrapped errors to ensure that no users depend on errors being unwrapped. This is still tricky, however, because the first case above will still compile. If no tests exercise the case where p.F() returns ErrFoo, the failure to unwrap the error may go undetected for a long time.\n\nIt would be better if the wrong case simply didn\u0027t compile. Perhaps this is an argument for changing the signature of Is so the target isn\u0027t an error, but some other type designed specifically to be compared to errors? This would also resolve the asymmetry in which Is unwraps its first parameter but not the second. On the other hand, this would make Is more difficult to use with existing sentinel values, so perhaps the gain isn\u0027t worth it. I think it\u0027s worth considering, however.",
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f4c7d4_ec245659",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5056
      },
      "writtenOn": "2018-11-20T15:21:33Z",
      "side": 1,
      "message": "Like you said, I think sentinel values essentially force the current function signature.",
      "parentUuid": "3cc54033_05d46f68",
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "274bcdf4_daebd8f0",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "I will change Errorf to require explicit wrapping. This should at least mitigate this a bit.",
      "parentUuid": "b8f4c7d4_ec245659",
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c40e540f_7ad1852c",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-11-06T23:37:56Z",
      "side": 1,
      "message": "represents as? \n\nIn any case, the phrasing must match the next sentence.",
      "range": {
        "startLine": 70,
        "startChar": 48,
        "endLine": 70,
        "endChar": 55
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65603c0f_0cd57adb",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c40e540f_7ad1852c",
      "range": {
        "startLine": 70,
        "startChar": 48,
        "endLine": 70,
        "endChar": 55
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cec033b8_3089ea4c",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-11-06T23:37:56Z",
      "side": 1,
      "message": "We need to document the contract of this As method somewhere. If we don\u0027t export an Aser interface, I guess it has to be here.",
      "range": {
        "startLine": 72,
        "startChar": 75,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f40c0b49_3bad0eda",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 14570
      },
      "writtenOn": "2018-11-06T23:37:56Z",
      "side": 1,
      "message": "or is not a pointer?",
      "range": {
        "startLine": 73,
        "startChar": 72,
        "endLine": 73,
        "endChar": 75
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0e5e5c_842367c3",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f40c0b49_3bad0eda",
      "range": {
        "startLine": 73,
        "startChar": 72,
        "endLine": 73,
        "endChar": 75
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66566da7_5ec41047",
        "filename": "errors/wrap.go",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 5182
      },
      "writtenOn": "2018-11-26T10:14:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cec033b8_3089ea4c",
      "range": {
        "startLine": 72,
        "startChar": 75,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "0d16b4a30785a9e6257298a87c656b3fbd927b70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}