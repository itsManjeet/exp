{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f6660db8_4e810c9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-14T14:34:07Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db127f4ca",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b127f4ca9d728e7b3218510a632eda29723004b0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b010ddc_b3180eea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-14T14:37:27Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f6660db8_4e810c9d",
      "tag": "autogenerated:trybots~happy",
      "revId": "b127f4ca9d728e7b3218510a632eda29723004b0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ea491a_3c928f33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-14T19:10:03Z",
      "side": 1,
      "message": "Or should we pass envs, build flags through the Config? ",
      "revId": "b127f4ca9d728e7b3218510a632eda29723004b0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b5f9a73_3f286bc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 44008
      },
      "writtenOn": "2022-03-14T20:14:10Z",
      "side": 1,
      "message": "I wonder how is golang/go#48079 related to this? I am looking at its original fix https://go-review.googlesource.com/c/exp/+/346609 and that code touches something else.\n\nWe introduced isLocal to skip loading when it does not make sense. That affects the number of modules with \"\" version, but the code in https://go.googlesource.com/exp/+/refs/heads/master/vulncheck/vulncheck.go (line 279) should handle \"\" versions regardless.\n\nAre you seeing something different?",
      "parentUuid": "c1ea491a_3c928f33",
      "revId": "b127f4ca9d728e7b3218510a632eda29723004b0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d5e214e_6990f7b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-14T23:04:49Z",
      "side": 1,
      "message": "You are right. I thought this was introduced as a hack to exclude the main module under development. \n\nIn my specific cases (use in gopls, or use in tests where different GOPATH/GOMODCACHE are set through go/packages.Config), I couldn\u0027t use vulncheck pkg due to `modCacheDirectory`. This CL was an attempt to write a test outside of vulncheck - vulncheck/binary_test.go and source_test.go rely on the `fetchingInTesting` var.\n\nShould we address the TODO in fetch.go:106 instead - for example, passing Env or, more specifically module cache location?",
      "parentUuid": "2b5f9a73_3f286bc2",
      "revId": "b127f4ca9d728e7b3218510a632eda29723004b0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}