{
  "comments": [
    {
      "key": {
        "uuid": "8057f0e8_cff53d75",
        "filename": "shiny/driver/internal/win32/syscall_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Why uintptr? Why not syscall.Handle?",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_effa0164",
        "filename": "shiny/driver/internal/win32/syscall_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Same.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05487277_c6ac64b1",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5080
      },
      "writtenOn": "2015-12-09T19:17:39Z",
      "side": 1,
      "message": "I know win32 is a common name for windows, but unless this is 32-bit specific, can we name this something else?",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a02dd478_c84c4f79",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5030
      },
      "writtenOn": "2015-12-09T19:21:24Z",
      "side": 1,
      "message": "Does the Win32 API have a new widely adopted name? I want something that unambiguously distinguishes it from WinRT, and Win32 is the only thing I have ever heard it called.",
      "parentUuid": "05487277_c6ac64b1",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_6ff0d187",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "I think \"win32\" name does not tell you about what this package is. Maybe you should write small package doco, and that will give you some clues.",
      "parentUuid": "a02dd478_c84c4f79",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_4ff30d95",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Perhaps you want to split this into 2 source files - screen related code and window related code.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_8ffb356b",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Why do you introduce HWND everywhere? Why not to keep it as syscall.Handle?",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_2f0de94f",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "I am not sure \"Show\" is a good name for a function that sends fake size event.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_6f07f12d",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Maybe name return parameter here, otherwise it is not clear what it does. Same everywhere in similar functions.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_2f31692d",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "I am not a Windows GUI expert, but ...\n\nYou should not need to call runtime.LockOSThread here, because it is already running on thread you locked Main on. Windows arranges that.\n\nYou don\u0027t need to protect any code that is called from here, because Windows will serialize your calls.\n\nBut you also cannot block anywhere here (or any code that is called from here). Windows send messages async here, so your code need to be ready to handle them. So no blocking on channels. So you need to be careful with what MouseEvent, PaintEvent and SizeEvent do. Same with AddWindowMsg - its fn parameter will have similar restrictions.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_8f1fb59a",
        "filename": "shiny/driver/internal/win32/win32.go",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "!!!! rewrite this !!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nf can make calls into Windows GUI API. I think you want to have message pump going to handle Windows messages before you call f.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_efb5a1a3",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Unrelated to your changes, but perhaps we can find simpler way to pass this to handleUpload. Why cannot we just send *upload pointer as lParam? We just need some way to prevent the struct to be GCed until the call to win32.SendMessage returns. Code will be simpler and faster.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_0f9bc534",
        "filename": "shiny/driver/windriver/windraw.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "What does returning true here do? Same everywhere.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_4fa5cd70",
        "filename": "shiny/driver/windriver/windraw.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Wrong place for defer. It should be right after win32.GetDC succeeded. Same everywhere else.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_6fa2916b",
        "filename": "shiny/driver/windriver/windraw.go",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Use defer (in appropriate place) to delete brush.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_afd2b9d7",
        "filename": "shiny/driver/windriver/windraw.go",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Same.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8057f0e8_cfc7fd18",
        "filename": "shiny/driver/windriver/windraw.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-12-10T04:35:08Z",
      "side": 1,
      "message": "Same.",
      "revId": "cd7cf8b6a1769bfd4bab131b6ca5a55f56ebd996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}