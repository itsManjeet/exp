{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d107f68_e3f9310a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-08T11:54:28Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd4bd0f69\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35d65a0d_4ce8be3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-08T11:55:32Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dd4bd0f69\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/29604312/linux-amd64_ca53f5ff.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "4d107f68_e3f9310a",
      "tag": "autogenerated:trybots~progress",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f79925_fab2d432",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-08T11:56:07Z",
      "side": 1,
      "message": "4 of 4 TryBots failed.\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/29604312/linux-amd64_ca53f5ff.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/29604312/linux-amd64-race_39bf6cf1.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/29604312/windows-amd64-2016_9bc3e0c6.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/29604312/windows-386-2008_a832d724.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "4d107f68_e3f9310a",
      "tag": "autogenerated:trybots~failed",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b04ba32_0efa622e",
        "filename": "slog/atomic.go",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Inline? This type is used once and doesn\u0027t really add anything. Even the nil case of get() is never actually used.",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcaf8fdb_1534c235",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Why is the last byte omitted? On the assumption that it\u0027s a newline? If so that should be verified.",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d07a7c0_b0393536",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "\"generates\" isn\u0027t quite right; let\u0027s aim at the application programmer here rather than the logging handler implementer. How about something like:\n\n// A Logger records structured information about each call to its\n// Log, Debug, Info, Warn, and Error methods made by an application.\n// For each call, it creates a Record and passes it to a Handler.",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1062cb_7909f8bd",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "\"of the specified level\"?",
      "range": {
        "startLine": 79,
        "startChar": 47,
        "endLine": 79,
        "endChar": 56
      },
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34d1f242_d61b55ae",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Is discarding the Handle errors (here and below) appropriate? Obviously we can\u0027t expect the caller to do anything with them, but might this be the only indication that the handler has failed to write the log to the backend server? Should it print to stderr in this case?",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df089b9e_a36eddfb",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Curious: what change are you anticipating?",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f968f21a_483eefcf",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "I assume this function will go away with useSourceLine, so I won\u0027t comment on the duplication w.r.t. the other call of time.Now.",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45eecf27_b31b1996",
        "filename": "slog/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Nit: Factor the calls to AddAttr to make clear that it is called exactly once per iteration?\nNit: use \"for i :\u003d 0; i \u003c len(args); i++\" with an extra i++ only in the string case, to clarify the loop?",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56cc380e_5dab3a94",
        "filename": "slog/logger_test.go",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "This constant will cause the test to fail spuriously any time someone makes a sound change to the first 114 lines of this file. Compute the correct value from the first call to check(0).",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd05187d_ce97e8c4",
        "filename": "slog/record.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-08T12:25:39Z",
      "side": 1,
      "message": "Let\u0027s chat about the list representation today.",
      "revId": "d4bd0f69f25faa1c062097e4aca8e1a175e98855",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}