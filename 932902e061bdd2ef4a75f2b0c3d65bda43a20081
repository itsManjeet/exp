{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "65879a2e_12d20206",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-01T22:30:04Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d932902e0",
      "tag": "autogenerated:trybots~beginning",
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "753f745e_f2ef5dc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-01T22:31:49Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "65879a2e_12d20206",
      "tag": "autogenerated:trybots~happy",
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75947682_1a2886b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 26615
      },
      "writtenOn": "2021-06-01T22:41:10Z",
      "side": 1,
      "message": "Nice! ðŸ˜„",
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0491b48_cd803975",
        "filename": "cmd/gorelease/testdata/basic/v1_v2_base_version_verify.test",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 26615
      },
      "writtenOn": "2021-06-01T22:41:10Z",
      "side": 1,
      "message": "I\u0027m a bit confused by this:\n\n- The user is in example.com/basic/v2 (v2!)\n- The user is basing their gorelease run on v1.1.0 (v1!)\n- The user is trying to release v2.1.0 (v2!)\n\nSo, when gorelease says that v2.1.0 is valid, does it mean: \"the changes from [2.0.0, 2.1.0) to 2.1.0 are suitable for a patch|minor release\", or does it mean, \"as compared with v1.1.0, v2.1.0 is safe - but then again, most anything (barring retracted deps, broken go.sums, etc) is, since you\u0027re doing a major! by the way i have no idea whether the changes you\u0027re making from v1.1.0 have any relation to versions in [2.0.0, 2.1.0)\"?\n\nIt\u0027s confusing because I\u0027m somehow implicitly assume there must be _some_ v2 versions. But, maybe that\u0027s not the case and the user just wants to release some non-v2.0.0 v2 version and skip [2.0.0,2.1.0)?\n\n(If so, is there a test that says we cannot \"skip\" versions? Like, `gorelease -base\u003dv2.0.0 -version\u003dv2.1.0` when v2.0.1 already exists)",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 52
      },
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "597675ca_b7dcc755",
        "filename": "cmd/gorelease/testdata/basic/v1_v2_base_version_verify.test",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-06-02T16:47:55Z",
      "side": 1,
      "message": "To answer at a technical level, this is saying that there weren\u0027t any changes between example.com/basic@v1.1.0 and the current directory that would make example.com/basic/v2@v2.1.0 an invalid version.\n\nYou\u0027re right though, this isn\u0027t a really useful statement, both because all changes are allowed between major versions and also because v1.1.0 may not be the correct choice of base version.\n\nI think this is a case where that \u0027go mod vet\u0027 / gomoddiff split might be helpful. Perhaps \u0027go mod vet\u0027 should not let the user specify a base version at all: it would only compare against the next lower version of the same module. \u0027go mod diff\u0027 would allow comparison between any two versions but would not make a judgment about whether the release version is valid or not.\n\nWDYT? If that sounds good, I\u0027ll add a comment in https://github.com/golang/go/issues/46371.",
      "parentUuid": "c0491b48_cd803975",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 52
      },
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528b37ac_d62d661d",
        "filename": "cmd/gorelease/testdata/basic/v1_v2_base_version_verify.test",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 26615
      },
      "writtenOn": "2021-06-02T17:21:41Z",
      "side": 1,
      "message": "\u003e Perhaps \u0027go mod vet\u0027 should not let the user specify a base version at all: it would only compare against the next lower version of the same module. \n\nWithout thinking about it too much, this seems like a good idea to me.\n\n\u003e \u0027go mod diff\u0027 would allow comparison between any two versions but would not make a judgment about whether the release version is valid or not.\n\nAlso SGTM.\n\n----------\n\nThanks for explaining!\n\nAs a last question: do you think #40913 is still somewhat unfulfilled after this CL? It seems like the user specifically wants diff (in order to generate changelogs), despite the title of their issue being about allowing major version comparisons. Although this satisfies the title of the issue, it does not seem to allow users to diff. ðŸ¤”\n\nI am probably missing something, so if this seems moot let me know. The contents of the CL look great to me and I am of course happy to +2. :D",
      "parentUuid": "597675ca_b7dcc755",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 52
      },
      "revId": "932902e061bdd2ef4a75f2b0c3d65bda43a20081",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}