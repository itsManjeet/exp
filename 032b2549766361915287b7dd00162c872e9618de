{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "af67f5a2_5ce34a8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-12-17T23:24:42Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s a realistic goal, just as x.GoString() and Python\u0027s repr(x) don\u0027t actually return valid expressions that denote x in most cases. But why does that matter? I think the only real requirement for text mode is that you can properly and unambiguously parse the key/value pairs, and that was already achieved by the previous code.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae1f6557_7c19ca4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-12-18T01:46:58Z",
      "side": 1,
      "message": "I agree that we can\u0027t do this 100%, but we should at least grab the fruit that is both low-hanging and reasonably common. Simple aggregates like slices and maps fit that description.",
      "parentUuid": "af67f5a2_5ce34a8d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a217df_dc8f3347",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-17T18:52:02Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d032b2549\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a423bf9_ea0d8679",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-17T18:54:40Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b2a217df_dc8f3347",
      "tag": "autogenerated:trybots~happy",
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39fed0dd_72d752d7",
        "filename": "slog/text_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-12-17T23:24:42Z",
      "side": 1,
      "message": "Why not just delegate to fmt.Sprint (as the code did before) or fmt.Sprintf(\"%#v\",x), instead of trying to simulate it here?",
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bba6578b_cc73ca44",
        "filename": "slog/text_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-12-18T01:46:58Z",
      "side": 1,
      "message": "#v isn\u0027t what you want for some of these things. For example, errors.New(\"foo\") prints with #v as something like \u0026errors.errorString(\"foo\").",
      "parentUuid": "39fed0dd_72d752d7",
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d275a733_7c31d49f",
        "filename": "slog/text_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-12-18T20:26:55Z",
      "side": 1,
      "message": "Ah, interesting. I agree that we shouldn\u0027t show the user \u0026errors.errorString(\"foo\") in this case, but it seems like only more evidence that what the user expects here is not Go syntax for v, but its string form.\n\nI suggest you retain the Sprint(x) behavior, and let users that want to format things differently express that themselves using the Value method. The behavior of fmt.Println is surely the least surprising.",
      "parentUuid": "bba6578b_cc73ca44",
      "revId": "032b2549766361915287b7dd00162c872e9618de",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}