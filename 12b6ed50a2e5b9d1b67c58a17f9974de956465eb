{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf97430_b1c2f481",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-13T13:36:49Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d12b6ed50\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f95c49a4_38f5b170",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-13T13:40:03Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7bf97430_b1c2f481",
      "tag": "autogenerated:trybots~happy",
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d04901f_c6649f51",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\"behaves the same as\" ?\n\n(a stronger statement)",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0801b83_979cc14a",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "comma before \"and\"\n\n(The \"Harvard\"/\"Oxford\" comma is helpful in technical writing since it disambiguates list items that contain conjunctions, like \"fish and chips\".)",
      "range": {
        "startLine": 89,
        "startChar": 58,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9daaa261_0536442f",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\"such as\"",
      "range": {
        "startLine": 89,
        "startChar": 46,
        "endLine": 89,
        "endChar": 50
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "931381b5_2cc93897",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\"Small\" isn\u0027t quite right here: a string can be large. How about \"typical values, including all numbers and strings, without allocation.\"?",
      "range": {
        "startLine": 95,
        "startChar": 26,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2bc44d_42d76409",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\", but\"",
      "range": {
        "startLine": 94,
        "startChar": 44,
        "endLine": 95,
        "endChar": 1
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d057bc9a_2d3dfa60",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\"severe the event\"",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 37
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b987374_2f2954e5",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "\"any int\"\n\nsince there is limit on the number of bits.",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 15
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6d22ea9_a4040363",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "Is this worth mentioning? I would expect nearly everyone to use the standard levels. That the formatting of the in-between ones is non-lossy is just a nice detail.",
      "range": {
        "startLine": 116,
        "startChar": 1,
        "endLine": 117,
        "endChar": 50
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f440753a_6a13f6a6",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "Tip: in writing, push the word \"only\" as far right as it will go to reduce the set of words it could possibly qualify, which even within a single sentence can otherwise be a mix of adjectives, nouns, adverbs, and verbs.\n\nAlso, \"want\" is anthropomorphising the code. We all do it, but perhaps this is better:\n\n\"In an application, you may wish to log messages only at or above a certain severity level.\"\n\nYou might also want to make explicit what we mean when referring to an application: that this global decision about verbosity is made by the maintainer of the \u0027main\u0027 function, in logic in or near that function.",
      "range": {
        "startLine": 119,
        "startChar": 31,
        "endLine": 119,
        "endChar": 35
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c06b638b_13463338",
        "filename": "slog/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-11-14T16:50:16Z",
      "side": 1,
      "message": "It\u0027s not immediately obvious that the previous Level is a field whereas this one is a type. Perhaps:\n\n\"The verbosity level of the built-in handlers can be configured through the [HandlerOptions.Level] field. Setting it to a constant of type [Level] fixes the handler\u0027s verbosity throughout its lifetime. Setting it to a [LevelVar] allows the verbosity to be varied dynamically. A LevelVar holds...\"",
      "range": {
        "startLine": 124,
        "startChar": 17,
        "endLine": 124,
        "endChar": 22
      },
      "revId": "12b6ed50a2e5b9d1b67c58a17f9974de956465eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}