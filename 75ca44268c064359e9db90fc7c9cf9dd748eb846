{
  "comments": [
    {
      "key": {
        "uuid": "6e1af804_ba07ad6b",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5810
      },
      "writtenOn": "2016-04-07T13:01:39Z",
      "side": 1,
      "message": "what about AxisBoth?",
      "range": {
        "startLine": 29,
        "startChar": 1,
        "endLine": 29,
        "endChar": 50
      },
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef00cde_f3344ada",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-04-07T17:09:43Z",
      "side": 1,
      "message": "I don\u0027t think Flow supports both. It\u0027s based on flexbox, which is either horizontal or vertical.",
      "parentUuid": "6e1af804_ba07ad6b",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef00cde_93573ed6",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-04-07T18:44:19Z",
      "side": 1,
      "message": "Should this be a panic in the case of AxisBoth?",
      "parentUuid": "8ef00cde_f3344ada",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_2573ae25",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "I don\u0027t think it needs to panic, just fall back to the default ContainerClassEmbed behavior, the same as if it was AxisNone.",
      "parentUuid": "8ef00cde_93573ed6",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef00cde_d33946d0",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-04-07T17:09:43Z",
      "side": 1,
      "message": "Flexbox has row-reverse and column-reverse. Are you planning something similar here?",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_0570b214",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "A Flow won\u0027t necessarily follow flexbox\u0027s model. The plan is to have a Flexbox container widget that has that, if you want it, but I don\u0027t think the full flexbox model is simple. A Flow is just a very simple container widget.\n\nIn the future, once Flexbox is implemented, if Flexbox seems to do everything a Flow does, we could delete the Flow type.",
      "parentUuid": "8ef00cde_d33946d0",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2c802d_951ac405",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5810
      },
      "writtenOn": "2016-04-07T13:01:39Z",
      "side": 1,
      "message": "axis \u003d\u003d AxisHorizontal || axis \u003d\u003d AxisBoth ?\n(and change the \u0027else\u0027 branch to an \u0027if axis\u003d\u003dAxisVertical || axis\u003d\u003dAxisBoth ?)",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_4576aa15",
        "filename": "shiny/widget/flow.go",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "Well, the \"axis\u003d\u003dAxisBoth\" would be redundant for the second case. It would never fire, which is asymmetric.",
      "parentUuid": "2e2c802d_951ac405",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e2b3c19_d49b5ca3",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5810
      },
      "writtenOn": "2016-04-07T13:01:39Z",
      "side": 1,
      "message": "perhaps AxisBoth should be AxisVertical|AxisHorizontal to ease the logic (as in widget/flow.go) ?",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 31,
        "endChar": 25
      },
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_6579a603",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "I added a comment to say that.",
      "parentUuid": "0e2b3c19_d49b5ca3",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 31,
        "endChar": 25
      },
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef00cde_533d56bd",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-04-07T17:09:43Z",
      "side": 1,
      "message": "While possibly a bit repetitive, I think it would be useful to talk about the lifetime of this value here. At some point a new cycle begins, a call to measure is necessary, and using MeasuredSize is incorrect (unless you\u0027re trying to recall something about the past).",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_e891eb75",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "I punted adding that commentary as a TODO for now.",
      "parentUuid": "8ef00cde_533d56bd",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef00cde_334ad251",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-04-07T17:09:43Z",
      "side": 1,
      "message": "directly by who? It\u0027s certainly fine for someone to modify it.\n\nWhen is it OK to look at this value? Who should look at it?",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efe40bd_c8962f6c",
        "filename": "shiny/widget/widget.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-04-08T00:27:47Z",
      "side": 1,
      "message": "Well, my intention was that only a parent\u0027s Layout method should modify the value, but on reflection, I suppose that it\u0027d be feasible, if unusual, for a widget to update its own position.\n\nI need to think a bit more about this, so I\u0027ve punted adding that commentary as a TODO for now.",
      "parentUuid": "8ef00cde_334ad251",
      "revId": "75ca44268c064359e9db90fc7c9cf9dd748eb846",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}