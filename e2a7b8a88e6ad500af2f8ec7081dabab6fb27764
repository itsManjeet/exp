{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4f4fa1d3_d24d13a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T12:33:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de2a7b8a8\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "437ffc0f_b9fc647f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T12:33:26Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "b821417f_64545a0f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2256f5f_1254d8a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T12:34:46Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003de2a7b8a8\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/41089704/linux-amd64_1a7430fb.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "4f4fa1d3_d24d13a9",
      "tag": "autogenerated:trybots~progress",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c85168f7_c9564db1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T12:35:22Z",
      "side": 1,
      "message": "4 of 4 TryBots failed.\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/41089704/linux-amd64_1a7430fb.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/41089704/linux-amd64-race_95e511c1.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/41089704/windows-amd64-2016_6af26d8a.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/41089704/windows-386-2008_530cee1e.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "4f4fa1d3_d24d13a9",
      "tag": "autogenerated:trybots~failed",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac07759_e5bc693e",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "It might be worth documenting at appender that the interface exists to break down the task of Text or JSON formatting into microscopic steps none of which need to avoid allocating dynamic memory for argument passing.\n\nIf there are only two choices, one wonders whether a single common handler containing a sprinkling of \"if json\"-statements might not be less trouble overall.",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f58841c9_37fce5ed",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "Can we call Time.AppendFormat directly, and avoid the possibility of error?",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bf96a9f_7493c38c",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "In theory this should return the error, but see above.",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f0e9ba8_0dafd18c",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "Include the kind in the error message.",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29932ce1_d558df60",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "return json.NewEncoder(a.buf()).Encode(v)\n\navoids a buffer copy, if I recall.",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc3a2678_e9ad1e9f",
        "filename": "slog/json_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T13:16:50Z",
      "side": 1,
      "message": "It\u0027s unfortunate that this delicate and potentially security-sensitive logic needs to be duplicated. Might be good to have a test that it generates the same result as the slower json.HTMLEscape just in case that one evolves in ways we should know about.",
      "revId": "e2a7b8a88e6ad500af2f8ec7081dabab6fb27764",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}