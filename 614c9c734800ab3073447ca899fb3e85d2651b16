{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "357d4af9_9bd5e03c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T18:26:50Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d614c9c73\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb2c5c00_4fa845e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-09T18:31:21Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "357d4af9_9bd5e03c",
      "tag": "autogenerated:trybots~happy",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd739e65_56f7b67d",
        "filename": "slog/handler.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-09T19:14:20Z",
      "side": 1,
      "message": "This wording (and similarly the With comment) make it sound as if duplicate keys are an error that we don\u0027t guarantee to check, but that some implementations might. Do we actually want that? I thought attributes were simply a list (with a clearly implied order), and no implication that duplicates are in any way special.\n\nIs there any reason not to define the interface that way? I\u0027m not sure it even needs additional wording since that\u0027s the natural implication of With(Attrs) being a slice, and the \"concatenate\" wording in the existing comment.",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bda7545c_e4aeaa39",
        "filename": "slog/handler.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-09-10T10:32:17Z",
      "side": 1,
      "message": "It is odd to list the things that something isn\u0027t. But here I\u0027m trying to answer a common question. Duplicate-handling came up a few times the public discussion (https://github.com/golang/go/discussions/54763). Probably because keys often become JSON object keys, JSON objects are often thought of as associative arrays with unique keys, and they\u0027re officially not. You can Google \"json unique keys\" to see how much virtual ink has been spilled over this.",
      "parentUuid": "dd739e65_56f7b67d",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "321d0d75_f9962842",
        "filename": "slog/handler.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-11T14:01:58Z",
      "side": 1,
      "message": "\u003e I\u0027m trying to answer a common question. Duplicate-handling came up a few times...\n\u003e Probably because keys often become JSON object keys\n\nI can see how JSON might raise the question, but this doesn\u0027t seem like the place to answer it: the Handler interface doesn\u0027t mention JSON at all. It would be appropriate for NewJSONHandler to document exactly how reach record\u0027s \"attribute list\" (let\u0027s use that term) is converted to JSON objects---sequentially, without duplicate removal. But here we\u0027re still talking about the abstraction, which makes these sentences confusing.\n\nEven if a particular Handler emits JSON, do we think it should be allowed to fail because an attribute list contains duplicate keys?\n\nPerhaps the problem is the word \"output\": it\u0027s not entirely clear what it means. The doc comments for this interface use four different verbs to explain what it does to a record: \"handle\", \"process\", \"accept\", and \"output\". It might be best if we stick to one, ideally \"handle\", something like:\n\n// A Handler handles log records produced by a Logger.\n//\n// A typical handler may print log records to standard error,\n// or write them to a file or database, or perhaps augment them\n// with additional attributes and pass them on to another handler.\n\n// Enabled reports whether the handler handles records at the given level.\n// The handler ignores records whose level is lower.\n\n// Handle handles a record.\n\nIf the Handler interface doesn\u0027t mention the concept of output, only \"handling records\", the issue of duplicates among the attribute list doesn\u0027t really arise.",
      "parentUuid": "bda7545c_e4aeaa39",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "493018b1_fa695911",
        "filename": "slog/handler.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-09-15T01:09:32Z",
      "side": 1,
      "message": "Done, mostly.",
      "parentUuid": "321d0d75_f9962842",
      "revId": "614c9c734800ab3073447ca899fb3e85d2651b16",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}