{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a865537e_386324fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-28T11:58:17Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7470df5a\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63046d84_96ffbd41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-28T12:02:41Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a865537e_386324fa",
      "tag": "autogenerated:trybots~happy",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "430930f1_ed9cc32e",
        "filename": "slog/handler.go",
        "patchSetId": 3
      },
      "lineNbr": 203,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-28T14:53:53Z",
      "side": 1,
      "message": "// The initial value of sep determines whether to emit a separator\n// before the next key, after which it stays true.",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da0ed103_b25df48b",
        "filename": "slog/handler_test.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-28T14:53:53Z",
      "side": 1,
      "message": "What test? ;-)",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7dbda38_5d225c8d",
        "filename": "slog/json_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-28T14:53:53Z",
      "side": 1,
      "message": "The total amount of logic for JSON vs text is very small, approaching the point where it may not make sense to have an appender abstraction: sprinkling \"if json {...} else {...}\" throughout the common handler may be clear enough--and avoid dynamic calls.",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b061f71_960d442c",
        "filename": "slog/json_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-09-28T18:50:01Z",
      "side": 1,
      "message": "I actually did that (because you made that same point before). The several switches, with their `default: panic` cases, made me sad. I thought this was a reasonable compromise.\n\nAs for the dynamic dispatch, these handlers are not intended to be highly optimized. The lock we grab before writing probably kills performance more than anything else.",
      "parentUuid": "d7dbda38_5d225c8d",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd3ef25_0b641797",
        "filename": "slog/json_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-28T18:53:59Z",
      "side": 1,
      "message": "\u003e I actually did that (because you made that same point before). The several switches, with their default: panic cases, made me sad.\n\nWhy would the number of switches change? I imagine appendAttrValue would look much as it does below, but each case would consult the json bit.\n\nIf you\u0027ve tried both, and you preferred this way, I\u0027ll trust your judgment and not mention it again. :)\n\n\u003e As for the dynamic dispatch, these handlers are not intended to be highly optimized.\n\nOh, I thought that was the reason for all the trouble with buffer pools.",
      "parentUuid": "2b061f71_960d442c",
      "revId": "7470df5adbb397d7127a660b95486a96895758b8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}