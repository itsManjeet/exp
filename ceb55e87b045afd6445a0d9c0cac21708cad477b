{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "14a2029f_f2262203",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5899
      },
      "writtenOn": "2021-08-14T23:19:56Z",
      "side": 1,
      "message": "Ping adg@.",
      "revId": "ceb55e87b045afd6445a0d9c0cac21708cad477b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4408ad8f_94e5633d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5899
      },
      "writtenOn": "2021-08-23T11:35:41Z",
      "side": 1,
      "message": "Ping adg@.\n\nIf the CL looks daunting, perhaps just review the public API. The rest of the iceberg is pretty much internal details and for practical purposes, iconvg.UpgradeToFileFormatVersion1 is just a magic black box where a []byte goes in and a []byte comes out.\n\nIt\u0027s also \u0027transitional\u0027 code, so I wouldn\u0027t sweat too hard on it. Long term, people should be using the other packages (github.com/google/iconvg/src/go/*) instead of this one (golang.org/x/exp/shiny/iconvg).",
      "parentUuid": "14a2029f_f2262203",
      "revId": "ceb55e87b045afd6445a0d9c0cac21708cad477b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b8887de_19e1ed04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5010
      },
      "writtenOn": "2021-08-30T03:53:13Z",
      "side": 1,
      "message": "Public API LGTM, I read through the rest of the code and it all looks okay to me, but I lack the domain knowledge to say for sure.\n\nSorry for the delay.",
      "revId": "ceb55e87b045afd6445a0d9c0cac21708cad477b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2bf611_3be42b1a",
        "filename": "shiny/iconvg/upgrade.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 5010
      },
      "writtenOn": "2021-08-30T03:53:13Z",
      "side": 1,
      "message": "err?",
      "range": {
        "startLine": 36,
        "startChar": 98,
        "endLine": 36,
        "endChar": 104
      },
      "revId": "ceb55e87b045afd6445a0d9c0cac21708cad477b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a10400d3_bfab7d04",
        "filename": "shiny/iconvg/upgrade.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 5899
      },
      "writtenOn": "2021-09-03T01:35:01Z",
      "side": 1,
      "message": "For named return values (of type error) I typically always call them \"retErr\" so I don\u0027t ever have to think about whether a \"x, err :\u003d etc\" line in the function body would shadow it.",
      "parentUuid": "8c2bf611_3be42b1a",
      "range": {
        "startLine": 36,
        "startChar": 98,
        "endLine": 36,
        "endChar": 104
      },
      "revId": "ceb55e87b045afd6445a0d9c0cac21708cad477b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}