{
  "comments": [
    {
      "key": {
        "uuid": "64091ddd_bd666b47",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "I\u0027m not sure if you need a fillRequest.dc field. (See below.)",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_5d790fe6",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "Strictly speaking any access of w.dc needs to be mutex-protected, if you can access it concurrently here and in the handlePaint goroutine.\n\nSee e.g. the sync.Mutex typed fields in x11driver.\n\nBut I\u0027m not sure if you need a w.dc field. (See below.)",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_9d828757",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "I\u0027d say:\n\nvar dop C.BYTE\nif op \u003d\u003d draw.Src {\n  dop \u003d 1\n}\n\nand not bother panic\u0027ing on other values. See e.g. func renderOp in shiny/driver/x11driver.",
      "range": {
        "startLine": 129,
        "startChar": 1,
        "endLine": 129,
        "endChar": 7
      },
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_dd8cff8a",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "Closing a channel should be done by the sender, not the receiver.\n\nBut, channels aren\u0027t file descriptors. It isn\u0027t necessary to close the done channel. Instead, it\u0027s fine to just let it be garbage collected.\n\nFurthermore, you don\u0027t need the done channel at all. For example, other Window methods like Upload and Draw are \u0027async\u0027 and aren\u0027t necessarily complete when the method returns. All a screen.Window guarantees is that the fill is in the queue, and the queue gets flushed when EndPaint is called.",
      "range": {
        "startLine": 146,
        "startChar": 1,
        "endLine": 146,
        "endChar": 6
      },
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_fd874365",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "Not for this change, but in a future one, perhaps add after all of these:\n\nif w \u003d\u003d nil {\n  log.Printf(\"windriver: no window found for HWND %v\", hwnd)\n  return\n}\n\nas it\u0027s probably better to log-and-return than to panic.",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_7d7cd3d7",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "You might not need a w.dc field, if you can always use this dc local variable.",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_1d6f9720",
        "filename": "shiny/driver/windriver/window.go",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "Instead of bringing up a new paintRequest channel each time (and tearing it down in EndPaint), can you try having a dedicated goroutine reading a dedicated channel? That goroutine can keep some state in local variables, and e.g. handlePaint will send the HDC to use, and EndPaint will say to stop using that HDC.\n\nDo you know if Windows UI library functions need to be called from a dedicated \u0027UI thread\u0027?",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_3d5b7b80",
        "filename": "shiny/driver/windriver/windraw.c",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "Watch your tabs/spaces for end-of-line comments. What lines up for some won\u0027t line up for others.",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4026d8c_afd2d943",
        "filename": "shiny/driver/windriver/windraw.c",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 9190
      },
      "writtenOn": "2015-08-26T01:15:34Z",
      "side": 1,
      "message": "Oh whoops, missed this. If it were me I\u0027d let gofmt take care of this once the code is rewritten; not sure what you want to do (or if the comments are even needed).",
      "parentUuid": "64091ddd_3d5b7b80",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_dd651f3b",
        "filename": "shiny/driver/windriver/windraw.c",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "I don\u0027t know GDI very well, but I wouldn\u0027t think that you\u0027d need to allocate (and delete) a bitmap just to fill a rectangle. I\u0027d expect that you could use something like FillRect instead, at least for op \u003d\u003d draw.Src, and hopefully for op \u003d\u003d draw.Over too.\n\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/dd162719(v\u003dvs.85).aspx",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_9d6ba70f",
        "filename": "shiny/driver/windriver/windraw.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-24T07:00:54Z",
      "side": 1,
      "message": "*colors++ \u003d color;\n\nand you might want to rename colors to p.",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64091ddd_400642da",
        "filename": "shiny/driver/windriver/windriver.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5899
      },
      "writtenOn": "2015-08-25T02:47:29Z",
      "side": 1,
      "message": "BTW do you have a link to what the DM_* messages are, and why there\u0027s no more than 0x40 of them?\n\nI tried searching the internet, but clearly I need a better search engine.",
      "revId": "c07c2e0f016dbd0ca4b5e611c5349f4329750216",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}