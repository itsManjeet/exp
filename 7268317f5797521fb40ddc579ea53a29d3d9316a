{
  "comments": [
    {
      "key": {
        "uuid": "59c4961f_d20c4bd6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "This is not a signed statement anymore.",
      "range": {
        "startLine": 15,
        "startChar": 23,
        "endLine": 15,
        "endChar": 64
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c921d3_effdd091",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59c4961f_d20c4bd6",
      "range": {
        "startLine": 15,
        "startChar": 23,
        "endLine": 15,
        "endChar": 64
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be1e1577_ef8d9078",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "\"notary keys\", as we might have to rotate the key for the same notary.",
      "range": {
        "startLine": 10,
        "startChar": 40,
        "endLine": 10,
        "endChar": 48
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9918c57_df496fa9",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be1e1577_ef8d9078",
      "range": {
        "startLine": 10,
        "startChar": 40,
        "endLine": 10,
        "endChar": 48
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01454bb2_8b1c7a77",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "I imagine there are restrictions on the characters allowed in the name. For example, I think a space, newline or a plus sign would be problematic. The alphabet for it should be documented.",
      "range": {
        "startLine": 14,
        "startChar": 31,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "670fb65b_9b25c1aa",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01454bb2_8b1c7a77",
      "range": {
        "startLine": 14,
        "startChar": 31,
        "endLine": 14,
        "endChar": 35
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79cda846_63a7844d",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "This feels like it\u0027s referring to an old iteration of the design.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b941a2_b8b1103d",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Deleted, thanks.",
      "parentUuid": "79cda846_63a7844d",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 31
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d4bd83b_4895873c",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "The format of this is unspecified.",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 23,
        "endChar": 33
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4cab920_a285ded7",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "8d4bd83b_4895873c",
      "range": {
        "startLine": 23,
        "startChar": 3,
        "endLine": 23,
        "endChar": 33
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5f6dc5_50aa9131",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Either \"allows verification of signatures by one notary public key\" or \"represents one notary public key\".",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 27,
        "endChar": 59
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5876207b_73c3f5fe",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe5f6dc5_50aa9131",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 27,
        "endChar": 59
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "480d50d1_5804d8a5",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Weak opinion, but using a character from the base64 alphabet made it hard to figure out what was going on from the examples. How about \"-\"?",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 41
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73d585e6_f263f71b",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Leaving as +. The base64 is last so the parsing is unambiguous.\nAnd name is conventionally a host/path (URL without https://),\nwhere it is fine to disallow + but not fine to disallow -.",
      "parentUuid": "480d50d1_5804d8a5",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 41
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0670c3f5_4b6cdbf1",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "We defined the hash as the \"first\", not high 32 bits of the SHA-256 hash, which I think is correct, but then it does not make sense to talk about endianness when specifying another byte encoding.\n\nInstead, we should specify that the uint32 representation is the big-endian interpretation of those first 32 bits.",
      "range": {
        "startLine": 80,
        "startChar": 26,
        "endLine": 80,
        "endChar": 38
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0559816b_f0a7df22",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "0670c3f5_4b6cdbf1",
      "range": {
        "startLine": 80,
        "startChar": 26,
        "endLine": 80,
        "endChar": 38
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5c9b2fb_47e51bd4",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "There are unfortunately a lot of different ways to encode an Ed25519 key. We should specify the encodings, if nothing else by referring to RFC 8032.",
      "range": {
        "startLine": 86,
        "startChar": 31,
        "endLine": 86,
        "endChar": 38
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa981871_a6025efc",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done (by reference to golang.org/x/crypto/ed25519 instead of RFC 8032).",
      "parentUuid": "f5c9b2fb_47e51bd4",
      "range": {
        "startLine": 86,
        "startChar": 31,
        "endLine": 86,
        "endChar": 38
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa9f4e3_55324138",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Typo.",
      "range": {
        "startLine": 88,
        "startChar": 21,
        "endLine": 88,
        "endChar": 35
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "726a6415_aad3312b",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baa9f4e3_55324138",
      "range": {
        "startLine": 88,
        "startChar": 21,
        "endLine": 88,
        "endChar": 35
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbdb7d33_6256d1d1",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Can we call this ID instead throughout, to disambiguate from a cryptographic hash, or a key fingerprint?",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 198,
        "endChar": 14
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32e9a8d_17428500",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "It\u0027s not an ID, because it does not uniquely identify anything.\nIt\u0027s also not a fingerprint, which to mean means a collision-resistant summary.\n\nThe term established by Google Keyczar is \"key hash\",\nand I\u0027ve been careful to use that term (key hash, not hash)\nthroughout the docs. I don\u0027t believe key hash appears\nanywhere that anyone might incorrectly think it is a\ncryptographic hash of data (especially since it is a uint32).\n\nHappy to change the name of this method to KeyHash though. \nDone.",
      "parentUuid": "cbdb7d33_6256d1d1",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 198,
        "endChar": 14
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3612fc80_444d1063",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "nit: I\u0027m a fan of io.WriteString for writing strings to Hashes.",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1293ed33_be5b04a0",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "No thanks. Using that here complicates the code with no benefit.",
      "parentUuid": "3612fc80_444d1063",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5a0a284_59fe6b67",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "A zero-length name feels worth returning an error for.",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "964bdf0a_73ef9d81",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "d5a0a284_59fe6b67",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c43fc637_91eb895d",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Same, I\u0027d check for \"len(name) !\u003d 0\", too.",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5dcf774_2b4fdb97",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "c43fc637_91eb895d",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6646caf3_bfc79f05",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "algEd25519",
      "range": {
        "startLine": 325,
        "startChar": 25,
        "endLine": 325,
        "endChar": 26
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cde7280_611ed559",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6646caf3_bfc79f05",
      "range": {
        "startLine": 325,
        "startChar": 25,
        "endLine": 325,
        "endChar": 26
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a05fb4a3_d98626ac",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Use priv.Seed.",
      "range": {
        "startLine": 363,
        "startChar": 39,
        "endLine": 363,
        "endChar": 48
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26daedc2_c211ecb3",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a05fb4a3_d98626ac",
      "range": {
        "startLine": 363,
        "startChar": 39,
        "endLine": 363,
        "endChar": 48
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d966ebb_8bfa547d",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "s/Parse/Open/",
      "range": {
        "startLine": 381,
        "startChar": 7,
        "endLine": 381,
        "endChar": 12
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a84bb4b_c2e01712",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d966ebb_8bfa547d",
      "range": {
        "startLine": 381,
        "startChar": 7,
        "endLine": 381,
        "endChar": 12
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18a059e7_6f6a4b8b",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "We should check that there are no overlapping keys here, as it\u0027s trivial to generate two verifier keys with the same short hash, and the result would be confusing at best.\n\nThis way if we get a result saying \"valid signature by Name (Hash)\" we know it\u0027s referring to the one and only \"Name (Hash)\" we expected, even if for some reason we accepted other verifier keys from untrusted source.",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aba57aa9_8d282dda",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "18a059e7_6f6a4b8b",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300c5fef_7f7ebabf",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 419,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "Instead of mixing verified and unverified notes in Note.Sigs, I\u0027d prefer to have two separate fields, so there\u0027s no chance for an application to mistake \"len(note.Sigs) \u003d\u003d 2\" to mean it has two valid signatures.",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed905ed0_08e6237c",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 419,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done.\n(The mixed API was important to preserve relative ordering in the Jan 4 design.)",
      "parentUuid": "300c5fef_7f7ebabf",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f311cbb5_5738cd78",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 469,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "This is way too dangerous. A valid note and a counterfeit one return extremely similar values, and the application has to reach deep into Note.Sigs to check for Name vs UnverifiedName.\n\nInstead, if none of the known verifiers accept the note, an error should be returned, so that the most common trust policy (where all and only the known notaries keys are trusted) can be safely implemented with a straightforward \"if err !\u003d nil\".",
      "range": {
        "startLine": 467,
        "startChar": 0,
        "endLine": 469,
        "endChar": 75
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8fcbc3_c240e7b9",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 469,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done. (Again, this made more sense in the Jan 4 design.)",
      "parentUuid": "f311cbb5_5738cd78",
      "range": {
        "startLine": 467,
        "startChar": 0,
        "endLine": 469,
        "endChar": 75
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e76887b8_9503b483",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 498,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "I think we should ignore multiple signatures from the same Verifier, I can\u0027t see why they would be useful, and I can see them confusing a \"N out of M\" quorum trust policy implementation.",
      "range": {
        "startLine": 498,
        "startChar": 1,
        "endLine": 498,
        "endChar": 32
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56e17644_10bd4d65",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 498,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e76887b8_9503b483",
      "range": {
        "startLine": 498,
        "startChar": 1,
        "endLine": 498,
        "endChar": 32
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ea6b4c2_e576d250",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-13T02:57:46Z",
      "side": 1,
      "message": "We should also have a cap on the number of signatures we\u0027ll allow on a single note. Ed25519 verification is cheap-ish, but at ~100 bytes each, they can quickly add up.",
      "range": {
        "startLine": 499,
        "startChar": 1,
        "endLine": 499,
        "endChar": 20
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f4820e7_99ad37fc",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done (verification takes 100us on my laptop; capped at 100 notes so 10ms).",
      "parentUuid": "0ea6b4c2_e576d250",
      "range": {
        "startLine": 499,
        "startChar": 1,
        "endLine": 499,
        "endChar": 20
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73e8711b_63736383",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 514,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "This seems like it could use chop().",
      "range": {
        "startLine": 510,
        "startChar": 0,
        "endLine": 514,
        "endChar": 51
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37bf1a1_9c64083c",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 514,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73e8711b_63736383",
      "range": {
        "startLine": 510,
        "startChar": 0,
        "endLine": 514,
        "endChar": 51
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8434ba92_963537a3",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-12T21:45:46Z",
      "side": 1,
      "message": "This should include the hash, as it\u0027s too short to be self-authenticating. And the more fields are verified the better.\n\nAlso, this needs documenting in the package docs.",
      "range": {
        "startLine": 531,
        "startChar": 0,
        "endLine": 535,
        "endChar": 69
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a166cfb_415966d0",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-14T01:58:53Z",
      "side": 1,
      "message": "The three arguments to verification are public-key, text, name.\nThe key-hash is a truncated SHA256(name, public-key).\nThat is, the key-hash was derived deterministically from\ntwo values that are already arguments to the verification.\nI don\u0027t see how putting it through a second time does anything.\n\nLeaving this comment for you to resolve if you agree.\n(Otherwise please let me know what I\u0027m missing.)",
      "parentUuid": "8434ba92_963537a3",
      "range": {
        "startLine": 531,
        "startChar": 0,
        "endLine": 535,
        "endChar": 69
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaeb134b_a91196a7",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 11715
      },
      "writtenOn": "2019-03-14T19:44:00Z",
      "side": 1,
      "message": "What raised a flag here is that there is no strong binding between public key and signature, that is, it\u0027s possible to generate a public key for which an existing signature is valid. This regularly trips up protocol designers and broke an early version of ACME. So the fact that it\u0027s an input to the verification does not mean it\u0027s verified itself.\n\nIn fact, it\u0027s often possible to generate degenerate public keys for which all signatures verify. (I haven\u0027t looked into if that\u0027s the case for Ed25519.) That defeats any kind of check based on adding content to the signed message, of course, but I can\u0027t actually think of anything an attacker would gain by \"stealing a signature\" anyway.\n\nIn conclusion, upon thinking about this more, I don\u0027t understand the threat this is defending against. If it\u0027s just a defense in depth for something we might not be foreseeing, adding the public key feels like it\u0027s just more of that, and it feels better to add the entire tuple we are looking up the public key by to the verification, rather than only a piece of it. However, I suspect the system would be solid also without adding the name, so there can\u0027t be any strong argument to add the public key, just like there is no strong argument to add the name.",
      "parentUuid": "3a166cfb_415966d0",
      "range": {
        "startLine": 531,
        "startChar": 0,
        "endLine": 535,
        "endChar": 69
      },
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75210f68_dc696446",
        "filename": "notary/internal/note/note.go",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 5056
      },
      "writtenOn": "2019-03-16T01:58:38Z",
      "side": 1,
      "message": "I\u0027m not trying to defend against a cryptographic threat\nbut instead just the accident of copying a key from one\nnotary to another, changing the host name, and not changing\nthe key. Especially an example key. That said, putting the\nname into the key hash (instead of making the key hash just\nhash the key material) was also meant to defend against that\nmistake, and one is probably enough. So I will take this one out.\n\nDone.",
      "parentUuid": "eaeb134b_a91196a7",
      "range": {
        "startLine": 531,
        "startChar": 0,
        "endLine": 535,
        "endChar": 69
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "7268317f5797521fb40ddc579ea53a29d3d9316a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}