{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69d7caa4_710481fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-21T14:53:54Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd1986b7b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59ffd99e_ff19208f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-21T14:57:38Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "69d7caa4_710481fe",
      "tag": "autogenerated:trybots~happy",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e861697a_ab04d074",
        "filename": "slices/slices.go",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-10-21T16:59:28Z",
      "side": 1,
      "message": "Please move this up to just after Delete, so that it is co-located with the similar Insert and Delete functions.  Thanks.",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0890665_65e26710",
        "filename": "slices/slices.go",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-10-21T16:59:28Z",
      "side": 1,
      "message": "Will this work correctly for\n\n    s :\u003d make([]int, 3, 20)\n    s[0] \u003d 0\n    s[1] \u003d 1\n    s[2] \u003d 2\n    s \u003d slices.Replace(s, 0, 1, 3, 4, 5, 6, 7)\n\n?",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8806a78c_5df8890d",
        "filename": "slices/slices.go",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 8541
      },
      "writtenOn": "2022-10-21T18:44:42Z",
      "side": 1,
      "message": "No, this implementation doesn\u0027t work. See https://go.dev/play/p/wNV-dF9hQMU. Because the first line isn\u0027t a copy, it just appends part of itself to itself after overwriting the original data. A proper implementation will probably need to grow the slice if necessary, then copy the parts after the modified part to wherever their new start is, and then copy the new data into place.",
      "parentUuid": "d0890665_65e26710",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0794b48c_8d16d277",
        "filename": "slices/slices_test.go",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-10-21T16:59:28Z",
      "side": 1,
      "message": "Use Equal rather than reflect.DeepEqual, as for the other tests.",
      "revId": "d1986b7b62c05d32baf952699d894aeaf2791745",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}