{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ed807215_1caaddd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-13T17:57:15Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0a61f466",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0a61f466c38c3f25db5c06bb53ec5096515f324e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90151c76_bd9e806f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-13T17:59:44Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ed807215_1caaddd7",
      "tag": "autogenerated:trybots~happy",
      "revId": "0a61f466c38c3f25db5c06bb53ec5096515f324e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54ca3405_f7cfaf53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-12-13T19:15:04Z",
      "side": 1,
      "message": "Note to the reviewers:\n\nFor this approach:\n- pros: 1) clean and intuitive solution, 2) seamlessly works with call graph search\n- cons: if a package has a lot of symbols, there can be a lot of Vulns entries in vulncheck.Result (the memory is not an issue, yet presenting many findings in the end might be. Also, there aren\u0027t many of such vulnerabilities.)\n\nAn alternative approach:\n\nHave only one Vuln entry with Vuln.Symbol field empty (or *) indicating \"every symbol\" in imports search. Then, when call graph search finds a symbol, add a new additional results.Vuln for that particular symbol.\n- pros: less entries in Result.Vuln\n- cons: 1) more work in the call search, 2) indirect and hence perhaps less intuitive, 3) needs handling of an unlikely special case when every symbol of a package is actually reachable via call graph analysis (we\u0027d then need to remove Vuln entry with empty Symbol).",
      "revId": "0a61f466c38c3f25db5c06bb53ec5096515f324e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}