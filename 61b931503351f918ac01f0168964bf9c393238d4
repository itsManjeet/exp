{
  "comments": [
    {
      "key": {
        "uuid": "8f86dbdb_0f48c7f3",
        "filename": "cmd/gorelease/errors.go",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-24T19:30:23Z",
      "side": 1,
      "message": "From this function\u0027s name, I would expect it to return a `[]byte` or `string` rather than an `error` — the output of `stderr` is not usually a well-formatted Go error message, and the caller is just converting it back to a string anyway.",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 24
      },
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a29d7c7_1852ecc0",
        "filename": "cmd/gorelease/errors.go",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-26T22:09:32Z",
      "side": 1,
      "message": "Added a comment to clarify the usage. Also moved one of the calls to where downloadError is constructed.\n\nBasically, this is trying to avoid an error message like \"exit status 1\" from \"go mod download\" and \"go list -m -versions\". Both have well-formatted error messages, so I\u0027d like to preserve them.",
      "parentUuid": "8f86dbdb_0f48c7f3",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 24
      },
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61aa469b_1efb03c4",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 574,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-24T19:30:23Z",
      "side": 1,
      "message": "This does not always preserve semantic ordering.\n\n(Consider the sequence [`v1.1.0`, …, `v1.9.0`, `v1.10.0`].)",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79f44780_1985e3c7",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 574,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-26T22:09:32Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "61aa469b_1efb03c4",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2a8c0b7_8c0a85bd",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 574,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-26T22:10:16Z",
      "side": 1,
      "message": "Actually, we may not need to sort these at all: https://tip.golang.org/cmd/go/#hdr-List_packages_or_modules claims that `cmd/go` already sorts them semantically.",
      "parentUuid": "61aa469b_1efb03c4",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "935868a2_5330f466",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 574,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-26T22:15:09Z",
      "side": 1,
      "message": "Ah, I wasn\u0027t sure if that was always true.\n\nIn any case, I\u0027d rather be defensive here. Sorting should be cheap compared with running the command.",
      "parentUuid": "d2a8c0b7_8c0a85bd",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52f9a8e1_a454a0cd",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 583,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-24T19:30:23Z",
      "side": 1,
      "message": "Um... I only see one call to loadVersions. Why do we need to guard it in a singleflight? (And why a singleflight rather than a sync.Once?)",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716d2faa_73499a93",
        "filename": "cmd/gorelease/gorelease.go",
        "patchSetId": 5
      },
      "lineNbr": 583,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-26T22:09:32Z",
      "side": 1,
      "message": "I don\u0027t remember why I did this. :P Removed.",
      "parentUuid": "52f9a8e1_a454a0cd",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67b35106_3d72ab30",
        "filename": "cmd/gorelease/report.go",
        "patchSetId": 5
      },
      "lineNbr": 293,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-24T19:30:23Z",
      "side": 1,
      "message": "I don\u0027t see any calls to this function — is this left over from an earlier draft, or accidentally added to this CL instead of a later one?",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "870f69c9_8f71a2e4",
        "filename": "cmd/gorelease/report.go",
        "patchSetId": 5
      },
      "lineNbr": 293,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-26T22:09:32Z",
      "side": 1,
      "message": "Left over from an earlier draft. Removed.",
      "parentUuid": "67b35106_3d72ab30",
      "revId": "61b931503351f918ac01f0168964bf9c393238d4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}