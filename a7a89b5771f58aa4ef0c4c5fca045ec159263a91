{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "86be3928_79a8c1fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-10T13:17:49Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003da7a89b57\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a7a89b5771f58aa4ef0c4c5fca045ec159263a91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12bcb700_16e9aff1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-10T13:19:42Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "86be3928_79a8c1fd",
      "tag": "autogenerated:trybots~happy",
      "revId": "a7a89b5771f58aa4ef0c4c5fca045ec159263a91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ffda989_b492e3ea",
        "filename": "slog/record.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-11T14:20:45Z",
      "side": 1,
      "message": "Perhaps make the intent more explicit:\n\n// Attrs returns the the Record\u0027s attribute list,\n// appended to the provided slice.",
      "revId": "a7a89b5771f58aa4ef0c4c5fca045ec159263a91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b663b22d_4ab98fd2",
        "filename": "slog/record.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-09-11T14:20:45Z",
      "side": 1,
      "message": "The Attrs function looks like a read-only accessor, but this operation is an update, and is therefore not safe to call concurrently on two pointers to the same Record.\n\nShould this method\u0027s receiver type be just Record? I assume the receiver\u0027s pointer is really just an optimization, as in the Time/Message/Level methods. Now that we have inlining, I wonder whether that optimization is necessary.",
      "revId": "a7a89b5771f58aa4ef0c4c5fca045ec159263a91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}